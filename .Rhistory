purchase_materials <- total_materials_reqd - begin_materials
# Cost is
€5 per kg
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
11310 * 5
cost_purchased <- purchase_materials * cost_per_kg
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
units_to_produce <- reqd_prod
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_materials[1:3] <- total_materials[2:4] * 0.15
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
total_materials_reqd
begin_materials <-  structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_materials[1] <- 1631
begin_materials[2:4] <- end_materials[1:3]
purchase_materials <- total_materials_reqd - begin_materials
# Cost is
€5 per kg
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
cost_purchased <- purchase_materials * cost_per_kg
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
# Total Annual Cost
annual_cost <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_cost[1] <- sum(cost_purchased)
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased,
annual_cost) %>%
kbl() %>%
kable_styling()
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending inventory = 25% of next quarter sales
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.2
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending inventory = 25% of next quarter sales
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.2
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending raw materials inventory each quarter of 10% of the next quarter's production needs.
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.1
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending raw materials inventory each quarter of 10% of the next quarter's production needs.
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.1
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.1
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending raw materials inventory each quarter of 20% of the next quarter's production needs.
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.2
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
units_to_produce <- reqd_prod
# Each unit requires 3 kilograms of materials
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
# ending raw materials inventory each quarter of 10% of the next quarter's production needs
end_materials[1:3] <- total_materials[2:4] * 0.1
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
total_materials_reqd
begin_materials <-  structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_materials[1] <- 1631
begin_materials[2:4] <- end_materials[1:3]
purchase_materials <- total_materials_reqd - begin_materials
# Cost of $5 per kilogram of materials
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
cost_purchased <- purchase_materials * cost_per_kg
# Total Annual Cost
annual_cost <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_cost[1] <- sum(cost_purchased)
units_to_produce <- reqd_prod
# Each unit requires 3 kilograms of materials
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
# ending raw materials inventory each quarter of 10% of the next quarter's production needs
end_materials[1:3] <- total_materials[2:4] * 0.1
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
total_materials_reqd
units_to_produce <- reqd_prod
# Each unit requires 3 kilograms of materials
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
# ending raw materials inventory each quarter of 10% of the next quarter's production needs
end_materials[1:3] <- total_materials[2:4] * 0.1
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
begin_materials <-  structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_materials[1] <- 1631
begin_materials[2:4] <- end_materials[1:3]
purchase_materials <- total_materials_reqd - begin_materials
# Cost of $5 per kilogram of materials
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
cost_purchased <- purchase_materials * cost_per_kg
# Total Annual Cost
annual_cost <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_cost[1] <- sum(cost_purchased)
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased,
annual_cost) %>%
kbl() %>%
kable_styling()
updateR()
q()
R.version
install.packages("Rtools")
install.packages("workflowr")
install.packages(c("dplyr", "rlang", "stringi"))
library(workflowr)
wflow_git_config(user.name = "JJCoen")
wflow_start(directory = "Scotland-Vaxxed")
setwd("~/MEGA/MEGAsync/Data_Scientist/Public-Sector/Vaccinations/Vax-Scotland")
#| include: false
#| label: load_libraries
library(data.table)
library(kableExtra)
library(ggplot2)
library(plotly)
library(janitor)
library(tidyr)
#| include: false
#|
scot_dt <- readRDS(file = "./data-clean/scot_dt.rds")
scot_dt[, rate := mort/pop * 10000]
setcolorder(scot_dt, c("year", "age_cat", "mort", "pop", "rate"))
head(scot_dt, 10) |>
kable()
#| include: false
#| label: load_libraries
library(data.table)
library(kableExtra)
library(ggplot2)
library(plotly)
library(janitor)
library(tidyr)
#| include: false
#|
scot_dt <- readRDS(file = "./data-clean/scot_dt.rds")
scot_dt[, rate := mort/pop * 10000]
setcolorder(scot_dt, c("year", "age_cat", "mort", "pop", "rate"))
head(scot_dt, 10) |>
kable()
library(purrr)
# base <- scot_dt[year==2019, rate]
# y <- 2019
# adj_rate <- scot_dt[year==eval(y), rate] - base
calc_adj_rate <- function(yr){
scot_dt[year==eval(yr), rate] - base
}
adj <- map(2010:2022, calc_adj_rate) |>
unlist()
#| include: false
#| label: load_libraries
library(data.table)
library(kableExtra)
library(ggplot2)
library(plotly)
library(janitor)
library(tidyr)
#| include: false
#|
scot_dt <- readRDS(file = "./data-clean/scot_dt.rds")
scot_dt[, rate := mort/pop * 10000]
setcolorder(scot_dt, c("year", "age_cat", "mort", "pop", "rate"))
head(scot_dt, 10) |>
kable()
library(purrr)
# base <- scot_dt[year==2019, rate]
# y <- 2019
# adj_rate <- scot_dt[year==eval(y), rate] - base
calc_adj_rate <- function(yr){
scot_dt[year==eval(yr), rate] - base
}
adj <- map(2010:2022, calc_adj_rate) |>
unlist()
adj <- map(2010:2022, calc_adj_rate)
# Set the base rate from year 2019 values
base <- scot_dt[year==2019, rate]
calc_adj_rate <- function(yr, base){
scot_dt[year==eval(yr), rate] - base
}
calc_adj_rate <- function(yr){
scot_dt[year==eval(yr), rate] - base
}
adj <- map(2010:2022, calc_adj_rate)
scot_dt[, rate_adj := adj]
#| include: false
#| label: load_libraries
library(data.table)
library(kableExtra)
library(ggplot2)
library(plotly)
library(janitor)
library(tidyr)
#| include: false
#|
scot_dt <- readRDS(file = "./data-clean/scot_dt.rds")
scot_dt[, rate := mort/pop * 10000]
setcolorder(scot_dt, c("year", "age_cat", "mort", "pop", "rate"))
head(scot_dt, 10) |>
kable()
library(purrr)
# Set the base rate from year 2019 values
base <- scot_dt[year==2019, rate]
# y <- 2019
# adj_rate <- scot_dt[year==eval(y), rate] - base
calc_adj_rate <- function(yr){
scot_dt[year==eval(yr), rate] - base
}
adj <- map(2010:2022, calc_adj_rate)
scot_dt[, rate_adj := adj]
#| include: false
#|
scot_dt <- readRDS(file = "./data-clean/scot_dt.rds")
scot_dt[, rate := mort/pop * 10000]
setcolorder(scot_dt, c("year", "age_cat", "mort", "pop", "rate"))
head(scot_dt, 10) |>
kable()
head(scot_dt, 10) |>
kable()
y <- 2019
adj_rate <- scot_dt[year==eval(y), rate] - base
calc_adj_rate <- function(yr){
scot_dt[year==eval(yr), rate] - base
}
calc_adj_rate(2010)
map_dbl(2010, calc_adj_rate)
map_vec(2010, calc_adj_rate)
map(2010, calc_adj_rate)
map(2010:2022, calc_adj_rate)
adj <- map(2010:2022, calc_adj_rate)
adj <- unlist(adj)
scot_dt[, rate_adj := adj]
scot_dt
head(scot_dt, 10)
head(scot_dt, 10) |>
kable()
#| warning: false
older <- scot_dt[age_cat  %in% c("65-74", "75-84", "85+")]
# Visualize changes over time
ggplot(older, aes(x = year, y = rate_adj)) +
geom_line(aes(group = age_cat), color = "grey50") +
geom_point(aes(color = age_cat, shape = age_cat)) +
# x-axis breaks for years from 2010 to 2022
scale_x_continuous(breaks = 2010:2022)
# Visualize changes over time
ggplot(older, aes(x = year, y = rate_adj)) +
geom_line(aes(group = age_cat), color = "grey50") +
geom_point(aes(color = age_cat, shape = age_cat)) +
# x-axis breaks for years from 2010 to 2022
scale_x_continuous(breaks = 2010:2022)
# Visualize changes over time
ggplot(older, aes(x = year, y = rate_adj)) +
geom_line(aes(group = age_cat), color = "grey50") +
geom_point(aes(color = age_cat, shape = age_cat)) +
# x-axis breaks for years from 2010 to 2022
scale_x_continuous(breaks = 2010:2022)
#| warning: false
older <- scot_dt[age_cat  %in% c("65-74", "75-84", "85+")]
# Visualize changes over time
ggplot(older, aes(x = year, y = rate_adj)) +
geom_line(aes(group = age_cat), color = "grey50") +
geom_point(aes(color = age_cat, shape = age_cat)) +
# x-axis breaks for years from 2010 to 2022
scale_x_continuous(breaks = 2010:2022)
working <- scot_dt[age_cat %in% c("15-44", "45-64"), ]
ggplot(working, aes(x = year, y = rate_adj)) +
geom_line(aes(group = age_cat), color = "grey50") +
geom_point(aes(color = age_cat, shape = age_cat)) +
# x-axis breaks for years from 2010 to 2022
scale_x_continuous(breaks = 2010:2022)
