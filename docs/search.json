[
  {
    "objectID": "explore.html",
    "href": "explore.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Calculate mortality rates per 10,000 persons for each age category\n\n\n\nThe baseline level is the 2019 numbers for each age group.\n\n\nCode\nlibrary(purrr)\n# Set the base rate from year 2019 values\nbase &lt;- scot_dt[Years==2019, rate]\n\ncalc_adj_rate &lt;- function(yr){\n    scot_dt[Years==eval(yr), rate] - base\n}\n\nadj &lt;- map(2010:2022, calc_adj_rate) \nadj &lt;- unlist(adj)\nscot_dt[, rate_adj := adj]\ncols &lt;- c(\"rate\", \"rate_adj\")\nscot_dt[, (cols) := round(.SD, 2), .SDcols = cols]\nscot_dt[1:20] |&gt; \n    gt()\n\n\n\n\n\n\n  \n    \n    \n      Years\n      age_cat\n      mort_count\n      pop_count\n      rate\n      rate_adj\n    \n  \n  \n    2010\n0-4\n260\n290899\n8.94\n1.65\n    2010\n5-9\n24\n269597\n0.89\n0.36\n    2010\n10-14\n24\n295701\n0.81\n-0.10\n    2010\n15-19\n147\n331830\n4.43\n0.99\n    2010\n20-24\n210\n353716\n5.94\n0.38\n    2010\n25-49\n2968\n1810545\n16.39\n-1.49\n    2010\n50-59\n3801\n696376\n54.58\n5.00\n    2010\n60-69\n7718\n588300\n131.19\n13.17\n    2010\n70-79\n13541\n398194\n340.06\n48.51\n    2010\n80+\n25274\n227042\n1113.19\n38.62\n    2010\nTotal\n53967\n5262200\n102.56\n-3.80\n    2010\n0-14\n308\n856197\n3.60\n0.81\n    2010\n15-24\n357\n685546\n5.21\n0.60\n    2010\n&lt;20\n455\n1115497\n4.08\n1.13\n    2010\n45-64\n8368\n1436146\n58.27\n2.80\n    2011\n0-4\n275\n292821\n9.39\n2.10\n    2011\n5-9\n27\n269617\n1.00\n0.47\n    2011\n10-14\n26\n291615\n0.89\n-0.02\n    2011\n15-19\n121\n330826\n3.66\n0.22\n    2011\n20-24\n205\n363940\n5.63\n0.08"
  },
  {
    "objectID": "explore.html#mortality-rates",
    "href": "explore.html#mortality-rates",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Calculate mortality rates per 10,000 persons for each age category\n\n\n\nThe baseline level is the 2019 numbers for each age group.\n\n\nCode\nlibrary(purrr)\n# Set the base rate from year 2019 values\nbase &lt;- scot_dt[Years==2019, rate]\n\ncalc_adj_rate &lt;- function(yr){\n    scot_dt[Years==eval(yr), rate] - base\n}\n\nadj &lt;- map(2010:2022, calc_adj_rate) \nadj &lt;- unlist(adj)\nscot_dt[, rate_adj := adj]\ncols &lt;- c(\"rate\", \"rate_adj\")\nscot_dt[, (cols) := round(.SD, 2), .SDcols = cols]\nscot_dt[1:20] |&gt; \n    gt()\n\n\n\n\n\n\n  \n    \n    \n      Years\n      age_cat\n      mort_count\n      pop_count\n      rate\n      rate_adj\n    \n  \n  \n    2010\n0-4\n260\n290899\n8.94\n1.65\n    2010\n5-9\n24\n269597\n0.89\n0.36\n    2010\n10-14\n24\n295701\n0.81\n-0.10\n    2010\n15-19\n147\n331830\n4.43\n0.99\n    2010\n20-24\n210\n353716\n5.94\n0.38\n    2010\n25-49\n2968\n1810545\n16.39\n-1.49\n    2010\n50-59\n3801\n696376\n54.58\n5.00\n    2010\n60-69\n7718\n588300\n131.19\n13.17\n    2010\n70-79\n13541\n398194\n340.06\n48.51\n    2010\n80+\n25274\n227042\n1113.19\n38.62\n    2010\nTotal\n53967\n5262200\n102.56\n-3.80\n    2010\n0-14\n308\n856197\n3.60\n0.81\n    2010\n15-24\n357\n685546\n5.21\n0.60\n    2010\n&lt;20\n455\n1115497\n4.08\n1.13\n    2010\n45-64\n8368\n1436146\n58.27\n2.80\n    2011\n0-4\n275\n292821\n9.39\n2.10\n    2011\n5-9\n27\n269617\n1.00\n0.47\n    2011\n10-14\n26\n291615\n0.89\n-0.02\n    2011\n15-19\n121\n330826\n3.66\n0.22\n    2011\n20-24\n205\n363940\n5.63\n0.08"
  },
  {
    "objectID": "explore.html#trend-lines",
    "href": "explore.html#trend-lines",
    "title": "Exploratory Data Analysis",
    "section": "Trend Lines",
    "text": "Trend Lines\n\nOlder\n\n\nCode\nolder &lt;- scot_dt[age_cat  %in% c(\"60-69\", \"70-79\", \"80+\")]\n\n# Visualize changes over time\ng_old &lt;- ggplot(older, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  # use custom palette\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\", \"darkblue\")) + \n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_old)\n\n\n\n\n\n\n\n\nMiddle Ages\n\n\nCode\nworking &lt;- scot_dt[age_cat %in% c(\"20-24\", \"25-49\", \"50-59\"), ]\n\ng_work &lt;- ggplot(working, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  # use brewer colour palettes\n  scale_color_brewer(palette=\"Dark2\") +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_work)\n\n\n\n\n\n\n\n\nTeens\n\n\nCode\nteens &lt;- scot_dt[age_cat %in% c(\"10-14\", \"15-19\")]\n\ng_teen &lt;- ggplot(teens, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  # Use grey scale\n  scale_color_grey() + theme_classic() +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_teen)\n\n\n\n\n\n\n\n\nYoung\n\n\nCode\nyoung &lt;- scot_dt[age_cat %in% c(\"0-4\", \"5-9\")]\n\ng_young &lt;- ggplot(young, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  scale_color_brewer(palette=\"Dark2\") +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_young)"
  },
  {
    "objectID": "data-sources.html",
    "href": "data-sources.html",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census, 2022\nScotland’s Census, 2011\n\n\n\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision"
  },
  {
    "objectID": "data-sources.html#census-and-statistics-service-of-scotland",
    "href": "data-sources.html#census-and-statistics-service-of-scotland",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census\nScotland’s Census, 2022\nScotland’s Census, 2011\nNational Records of Scotland:\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision\n\n\n\nNational Records of Scotland, Vital Events 2022\nSection 5 contains mortality by age\nVital Events Reference Tables 2021\nVital Events Archive - Historical data back to 2001"
  },
  {
    "objectID": "getting-cleaning-data.html",
    "href": "getting-cleaning-data.html",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Code\nsource(\"./scripts/get-census-11.R\")   \n# Population counts for each year of age\npop11_1yr &lt;- get_census_11(is_plot = 0)  \n\n# Section age variable into the 7 HP age categories\npop11 &lt;- make_groups(pop11_1yr, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(pop11_1yr, get_census_11)\n\n\n\n\n\n\n\n\n\n\nSimilar to Census 2011, population numbers are for each year of age\nsource(\"./scripts/get-pop-by-year.R\")\nfile_21 &lt;- \"./raw-data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"F4:CR5\"\n\npop21 &lt;- get_pop_by_year(file_21, sheet_21, range_21)\n\npop21 &lt;- make_groups(pop21, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_21, range_21, sheet_21)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\n\nfile_20 &lt;- \"./raw-data/mid-year-pop-est-20-data.xlsx\"\nsheet_20 &lt;- \"Table 1\"\nrange_20 &lt;- \"F4:CR5\"\n\npop20 &lt;- get_pop(file_20, is_16 = 0)\npop20[, age := group_5yr][, age_cat := NULL]\n\npop20 &lt;- make_groups(pop20, is_pop = 1, cat_19 = FALSE)\nrm(file_20, range_20, sheet_20)\n\n\n\n\n\n\n\n\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n\nCode\nfile_19 &lt;- \"./raw-data/mid-year-pop-est-19-data.xlsx\"  \n\npop19 &lt;- get_pop(file_19, is_16 = 0) \npop19[, age := group_5yr][, age_cat := NULL]\n\npop19 &lt;- make_groups(pop19, is_pop = 1, cat_19 = FALSE)\nrm(file_19)\n\n\n\n\n\n\n\nCode\nfile_18 &lt;- \"./raw-data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18 &lt;- get_pop(file_18, is_16 = 0) \npop18[, age := group_5yr][, age_cat := NULL]\n\npop18 &lt;- make_groups(pop18, is_pop = 1, cat_19 = FALSE)\nrm(file_18)\n\n\n\n\n\n\n\nCode\nfile_17 &lt;- \"./raw-data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17 &lt;- get_pop(file_17, is_16 = 0) \npop17[, age := group_5yr][, age_cat := NULL]\n\npop17 &lt;- make_groups(pop17, is_pop = 1, cat_19 = FALSE)\nrm(file_17)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\nfile_16 &lt;- \"./raw-data/16-mid-year-pe-tab1.xlsx\" \n\npop16 &lt;- get_pop(file_16, is_16 = 1)\npop16[, age := group_5yr][, age_cat := NULL]\n\npop16 &lt;- make_groups(pop16, is_pop = 1, cat_19 = FALSE)\nrm(file_16)\n\n\n\n\n\n\n\nCode\nfile_15 &lt;- \"./raw-data/15mype-cahb-tab1.xlsx\" \n\npop15 &lt;- get_pop(file_15, is_16 = 0) \npop15[, age := group_5yr][, age_cat := NULL]\n\npop15 &lt;- make_groups(pop15, is_pop = 1, cat_19 = FALSE)\nrm(file_15)\n\n\n\n\n\n\n\nCode\nfile_14 &lt;- \"./raw-data/14mype-cahb-all-tab.xlsx\"  \n\npop14 &lt;- get_pop(file_14, is_16 = 0) \npop14[, age := group_5yr][, age_cat := NULL]\n\npop14 &lt;- make_groups(pop14, is_pop = 1, cat_19 = FALSE)\nrm(file_14)\n\n\n\n\n\n\n\nCode\nfile_13 &lt;- \"./raw-data/13mype-cahb-tab1.xlsx\"  \n\npop13 &lt;- get_pop(file_13, is_16 = 0) \npop13[, age := group_5yr][, age_cat := NULL]\n\npop13 &lt;- make_groups(pop13, is_pop = 1, cat_19 = FALSE)\nrm(file_13)\n\n\n\n\n\n\n\nCode\nfile_12 &lt;- \"./raw-data/12mype-cahb-tab1.xlsx\"  \n\npop12 &lt;- get_pop(file_12, is_16 = 0) \npop12[, age := group_5yr][, age_cat := NULL]\n\npop12 &lt;- make_groups(pop12, is_pop = 1, cat_19 = FALSE)\nrm(file_12)\n\n\n\n\n\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nsource(\"./scripts/get-pop-by-year.R\")\n\nfile_10 &lt;- \"./raw-data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"C4:CO5\"\n\npop10 &lt;- get_pop_by_year(file_10, sheet_10, range_10)\n\npop10 &lt;- make_groups(pop10, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_10, range_10, sheet_10)\n\n\n\n\nCode\n# pop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# \n# pop_dt &lt;- rbind(pop10, pop11, pop12, pop13, pop14, pop15,\n#                  pop16, pop17, pop18, pop19, pop20, pop21, \n#                  pop22)\n# \n# saveRDS(pop_dt, file = \"./processed-data/scot-pop.rds\")\n# \n# # Cleanup the environment\n# # keep 'group5yr' vector containing age categories\n# remove(list = pop_all)\nrm(get_pop, get_pop_by_year)"
  },
  {
    "objectID": "getting-cleaning-data.html#scotlands-census",
    "href": "getting-cleaning-data.html#scotlands-census",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Code\nsource(\"./scripts/get-census-11.R\")   \n# Population counts for each year of age\npop11_1yr &lt;- get_census_11(is_plot = 0)  \n\n# Section age variable into the 7 HP age categories\npop11 &lt;- make_groups(pop11_1yr, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(pop11_1yr, get_census_11)"
  },
  {
    "objectID": "getting-cleaning-data.html#nrs-mid-year-population-estimates",
    "href": "getting-cleaning-data.html#nrs-mid-year-population-estimates",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Similar to Census 2011, population numbers are for each year of age\nsource(\"./scripts/get-pop-by-year.R\")\nfile_21 &lt;- \"./raw-data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"F4:CR5\"\n\npop21 &lt;- get_pop_by_year(file_21, sheet_21, range_21)\n\npop21 &lt;- make_groups(pop21, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_21, range_21, sheet_21)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\n\nfile_20 &lt;- \"./raw-data/mid-year-pop-est-20-data.xlsx\"\nsheet_20 &lt;- \"Table 1\"\nrange_20 &lt;- \"F4:CR5\"\n\npop20 &lt;- get_pop(file_20, is_16 = 0)\npop20[, age := group_5yr][, age_cat := NULL]\n\npop20 &lt;- make_groups(pop20, is_pop = 1, cat_19 = FALSE)\nrm(file_20, range_20, sheet_20)\n\n\n\n\n\n\n\n\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n\nCode\nfile_19 &lt;- \"./raw-data/mid-year-pop-est-19-data.xlsx\"  \n\npop19 &lt;- get_pop(file_19, is_16 = 0) \npop19[, age := group_5yr][, age_cat := NULL]\n\npop19 &lt;- make_groups(pop19, is_pop = 1, cat_19 = FALSE)\nrm(file_19)\n\n\n\n\n\n\n\nCode\nfile_18 &lt;- \"./raw-data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18 &lt;- get_pop(file_18, is_16 = 0) \npop18[, age := group_5yr][, age_cat := NULL]\n\npop18 &lt;- make_groups(pop18, is_pop = 1, cat_19 = FALSE)\nrm(file_18)\n\n\n\n\n\n\n\nCode\nfile_17 &lt;- \"./raw-data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17 &lt;- get_pop(file_17, is_16 = 0) \npop17[, age := group_5yr][, age_cat := NULL]\n\npop17 &lt;- make_groups(pop17, is_pop = 1, cat_19 = FALSE)\nrm(file_17)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\nfile_16 &lt;- \"./raw-data/16-mid-year-pe-tab1.xlsx\" \n\npop16 &lt;- get_pop(file_16, is_16 = 1)\npop16[, age := group_5yr][, age_cat := NULL]\n\npop16 &lt;- make_groups(pop16, is_pop = 1, cat_19 = FALSE)\nrm(file_16)\n\n\n\n\n\n\n\nCode\nfile_15 &lt;- \"./raw-data/15mype-cahb-tab1.xlsx\" \n\npop15 &lt;- get_pop(file_15, is_16 = 0) \npop15[, age := group_5yr][, age_cat := NULL]\n\npop15 &lt;- make_groups(pop15, is_pop = 1, cat_19 = FALSE)\nrm(file_15)\n\n\n\n\n\n\n\nCode\nfile_14 &lt;- \"./raw-data/14mype-cahb-all-tab.xlsx\"  \n\npop14 &lt;- get_pop(file_14, is_16 = 0) \npop14[, age := group_5yr][, age_cat := NULL]\n\npop14 &lt;- make_groups(pop14, is_pop = 1, cat_19 = FALSE)\nrm(file_14)\n\n\n\n\n\n\n\nCode\nfile_13 &lt;- \"./raw-data/13mype-cahb-tab1.xlsx\"  \n\npop13 &lt;- get_pop(file_13, is_16 = 0) \npop13[, age := group_5yr][, age_cat := NULL]\n\npop13 &lt;- make_groups(pop13, is_pop = 1, cat_19 = FALSE)\nrm(file_13)\n\n\n\n\n\n\n\nCode\nfile_12 &lt;- \"./raw-data/12mype-cahb-tab1.xlsx\"  \n\npop12 &lt;- get_pop(file_12, is_16 = 0) \npop12[, age := group_5yr][, age_cat := NULL]\n\npop12 &lt;- make_groups(pop12, is_pop = 1, cat_19 = FALSE)\nrm(file_12)\n\n\n\n\n\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nsource(\"./scripts/get-pop-by-year.R\")\n\nfile_10 &lt;- \"./raw-data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"C4:CO5\"\n\npop10 &lt;- get_pop_by_year(file_10, sheet_10, range_10)\n\npop10 &lt;- make_groups(pop10, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_10, range_10, sheet_10)\n\n\n\n\nCode\n# pop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# \n# pop_dt &lt;- rbind(pop10, pop11, pop12, pop13, pop14, pop15,\n#                  pop16, pop17, pop18, pop19, pop20, pop21, \n#                  pop22)\n# \n# saveRDS(pop_dt, file = \"./processed-data/scot-pop.rds\")\n# \n# # Cleanup the environment\n# # keep 'group5yr' vector containing age categories\n# remove(list = pop_all)\nrm(get_pop, get_pop_by_year)"
  },
  {
    "objectID": "transform.html",
    "href": "transform.html",
    "title": "Data Transformation",
    "section": "",
    "text": "Code\n# Five year age categories:\nage_5yr &lt;- c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \n                         \"25-29\", \"30-34\", \"35-39\", \"40-44\", \n                         \"45-49\", \"50-54\", \"55-59\", \"60-64\", \n                         \"65-69\", \"70-74\", \"75-79\",\n                         \"80-84\", \"85-89\", \"90 plus\")"
  },
  {
    "objectID": "transform.html#scotlands-census",
    "href": "transform.html#scotlands-census",
    "title": "Data Transformation",
    "section": "Scotland’s Census",
    "text": "Scotland’s Census\n\n2022\n\n\nImport excel sheet giving numbers of persons by 5-year age groups for year 2022. /n Verify that total recorded in source data equals total computed from the transformed data\nsource(\"./scripts/get-census-22.R\")\nsource(\"./scripts/transform-pop.R\")\n\ncensus22 &lt;- get_census_22(is_plot=0)\n# Population counts are in 5-year age groups\npop22_5yr &lt;- census22[[1]]\ntotal22 &lt;- census22[[2]]\n\n# Convert age categories to HP grouping\n# Source data contains 19 categories\npop22 &lt;- transform_pop(pop22_5yr)\n\nverify(pop22, total22 == pop22[1:10, sum(count)],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nImport excel sheet giving numbers of persons by 5-year age groups for year 2022. /n Verify that total recorded in source data equals total computed from the transformed data\n# cleanup\nrm(census22, pop22_5yr, total22, get_census_22)\n\n\n\n\n2011\n\n\nSource data for year 2022 records counts by single year of age. /nTRUE output means that total count recorded in source data equals sum of age categories\nsource(\"./scripts/get-census-11.R\")   \n# Population counts for each year of age\npop11_5yr &lt;- get_census_11()  \n\n# Section age variable into the HP age categories\npop11 &lt;- transform_pop(pop11_5yr)\n\n# cleanup\nrm(pop11_5yr, get_census_11)"
  },
  {
    "objectID": "transform.html#nrs-mid-year-population-estimates",
    "href": "transform.html#nrs-mid-year-population-estimates",
    "title": "Data Transformation",
    "section": "NRS Mid-Year Population Estimates",
    "text": "NRS Mid-Year Population Estimates\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n2021\n\n\nSimilar to Census 2011, population numbers are for each year of age\nsource(\"./scripts/get-pop-by-year.R\")\nsource(\"./scripts/transform-pop-by-year.R\")\n\nfile_21 &lt;- \"./raw-data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"E4:CR5\"\n\npop21_list &lt;- get_pop_by_year(file_21, sheet_21, range_21)\npop21 &lt;- pop21_list[[1]]\ntotal21 &lt;- pop21_list[[2]]\n\npop21 &lt;- transform_pop_by_year(pop21)\n\n# Check total recorded in source data equals sum of age categories\nverify(pop21, total21 == pop21[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nSimilar to Census 2011, population numbers are for each year of age\n# cleanup\nrm(file_21, range_21, sheet_21, total21, pop21_list)\n\n\n\n\n2020\n\n\nCode\nsource(\"./scripts/get-pop.R\")\n\nfile_20 &lt;- \"./raw-data/mid-year-pop-est-20-data.xlsx\"\n# sheet_20 &lt;- \"Table 1\"\n# range_20 &lt;- \"F4:CR5\"\n\npop20_list &lt;- get_pop(file_20, is_16 = 0)\npop20 &lt;- pop20_list[[1]]\ntotal20 &lt;- pop20_list[[2]]\n\npop20[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop20 &lt;- transform_pop(pop20)\n\nverify(pop20, total20 == pop20[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_20, pop20_list, total20)"
  },
  {
    "objectID": "transform.html#nrs-mid-year-population-estimates---archive",
    "href": "transform.html#nrs-mid-year-population-estimates---archive",
    "title": "Data Transformation",
    "section": "NRS Mid-Year Population Estimates - Archive",
    "text": "NRS Mid-Year Population Estimates - Archive\n\n2019\n\n\nCode\nfile_19 &lt;- \"./raw-data/mid-year-pop-est-19-data.xlsx\"  \n\npop19_list &lt;- get_pop(file_19, is_16 = 0) \npop19 &lt;- pop19_list[[1]]\ntotal19 &lt;- pop19_list[[2]]\npop19[, age_cat := age_5yr]\n\npop19 &lt;- transform_pop(pop19)\n\nverify(pop19, total19 == pop19[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_19, pop19_list, total19)\n\n\n\n\n2018\n\n\nCode\nfile_18 &lt;- \"./raw-data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18_list &lt;- get_pop(file_18, is_16 = 0) \npop18 &lt;- pop18_list[[1]]\ntotal18 &lt;- pop18_list[[2]]\npop18[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop18 &lt;- transform_pop(pop18)\n\nverify(pop18, total18 == pop18[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_18, pop18_list, total18)\n\n\n\n\n2017\n\n\nCode\nfile_17 &lt;- \"./raw-data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17_list &lt;- get_pop(file_17, is_16 = 0) \npop17 &lt;- pop17_list[[1]]\ntotal17 &lt;- pop17_list[[2]]\npop17[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop17 &lt;- transform_pop(pop17)\n\nverify(pop17, total17 == pop17[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_17, pop17_list, total17)\n\n\n\n\n2016\n\n\nCode\nsource(\"./scripts/get-pop.R\")\nfile_16 &lt;- \"./raw-data/16-mid-year-pe-tab1.xlsx\" \n\npop16_list &lt;- get_pop(file_16, is_16 = 1)\npop16 &lt;- pop16_list[[1]]\ntotal16 &lt;- pop16_list[[2]]\npop16[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop16 &lt;- transform_pop(pop16)\n\nverify(pop16, total16 == pop16[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_16, pop16_list, total16)\n\n\n\n\n2015\n\n\nCode\nfile_15 &lt;- \"./raw-data/15mype-cahb-tab1.xlsx\" \n\npop15_list &lt;- get_pop(file_15, is_16 = 0) \npop15 &lt;- pop15_list[[1]]\ntotal15 &lt;- pop15_list[[2]]\npop15[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop15 &lt;- transform_pop(pop15)\n\nverify(pop15, total15 == pop15[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_15, pop15_list, total15)\n\n\n\n\n2014\n\n\nCode\nfile_14 &lt;- \"./raw-data/14mype-cahb-all-tab.xlsx\"  \n\npop14_list &lt;- get_pop(file_14, is_16 = 0) \npop14 &lt;- pop14_list[[1]]\ntotal14 &lt;- pop14_list[[2]]\npop14[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop14 &lt;- transform_pop(pop14)\n\nverify(pop14, total14 == pop14[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_14, pop14_list, total14)\n\n\n\n\n2013\n\n\nCode\nfile_13 &lt;- \"./raw-data/13mype-cahb-tab1.xlsx\"  \n\npop13_list &lt;- get_pop(file_13, is_16 = 0) \npop13 &lt;- pop13_list[[1]]\ntotal13 &lt;- pop13_list[[2]]\npop13[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop13 &lt;- transform_pop(pop13)\n\nverify(pop13, total13 == pop13[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_13, pop13_list, total13)\n\n\n\n\n2012\n\n\nCode\nfile_12 &lt;- \"./raw-data/12mype-cahb-tab1.xlsx\"  \n\npop12_list &lt;- get_pop(file_12, is_16 = 0) \npop12 &lt;- pop12_list[[1]]\ntotal12 &lt;- pop12_list[[2]]\npop12[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop12 &lt;- transform_pop(pop12)\n\nverify(pop12, total12 == pop12[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_12, pop12_list, total12)\n\n\n\n\n2010\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nfile_10 &lt;- \"./raw-data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"B4:CO5\"\n\npop10_list &lt;- get_pop_by_year(file_10, sheet_10, range_10)\npop10 &lt;- pop10_list[[1]]\ntotal10 &lt;- pop10_list[[2]]\npop10 &lt;- transform_pop_by_year(pop10)\n\n# Check total recorded in source data equals sum of age categories\nverify(pop10, total10 == pop10[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nconvert single year population numbers to age categories\n# cleanup\nrm(file_10, range_10, sheet_10, pop10_list, total10)"
  },
  {
    "objectID": "transform.html#construct-excel-table-for-population",
    "href": "transform.html#construct-excel-table-for-population",
    "title": "Data Transformation",
    "section": "Construct Excel Table for Population",
    "text": "Construct Excel Table for Population\nThe table required by Humanity Projects has the age categories as column names (not tidy data format). The first column contains the years from 2010 to 2022.\n\n\nCode\nHP_cat &lt;- pop22[, age_cat]\npop_mx &lt;- matrix(c(\n    2010, pop10[, count],\n    2011, pop11[, count],\n    2012, pop12[, count],\n    2013, pop13[, count],\n    2014, pop14[, count],\n    2015, pop15[, count],\n    2016, pop16[, count],\n    2017, pop17[, count],\n    2018, pop18[, count],\n    2019, pop19[, count],\n    2020, pop20[, count],\n    2021, pop21[, count],\n    2022, pop22[, count]\n    ),\n    byrow = TRUE,\n    nrow = 13,\n    dimnames = list(1:13, c(\"Years\", HP_cat)))\n\npop_table &lt;- as.data.frame(pop_mx)\nwrite_xlsx(pop_table, path = \"./processed-data/Table_4_yearly_pop_counts.xlsx\")\n\n\nSave population tables for exploratory analysis\n\n\nCode\n# In the \"pop_df\" dataframe, age categories are spread across \n# columns.  The cells contain population counts.  \n# The \"pivot_longer()\" function transposes the age categories into\n# a single column.\nscot_pop &lt;- pop_table |&gt; pivot_longer(cols = !Years, \n                       # reshape every column apart from Years\n                       names_to = \"age_cat\", \n                       values_to = \"pop_count\"\n)\n\nsaveRDS(scot_pop, file = \"./processed-data/scot_pop.rds\")\n# \n# # Cleanup the environment\npop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# # keep 'age_5yr' vector containing age categories\nremove(list = pop_all)\nrm(get_pop, get_pop_by_year, \n   transform_pop, transform_pop_by_year, pop_mx, pop_all)"
  },
  {
    "objectID": "transform.html#mortality",
    "href": "transform.html#mortality",
    "title": "Data Transformation",
    "section": "Mortality",
    "text": "Mortality\n\n2022\nInput data and convert to table\n\n\nCode\nsource(\"./scripts/get-mort-year.R\")\nsource(\"./scripts/transform-mort.R\")\n\nfile_year &lt;- \"./raw-data/vital-events-22-ref-tabs-5.xlsx\"\nmort22 &lt;- read_excel(file_year, sheet = 4,\n                              range = \"C4:W6\") |&gt; \n    setDT()\n    \n# First row is blank / NAs\nmort22 &lt;- mort22[2,]\n# Extract the total count contained in the first column\ntotal22 &lt;- mort22[, 1] |&gt; \n    as.numeric()\n# Remove first column\nmort22[, 1 := NULL]\n\n# age category variable is spread across columns\n# mortality counts are stored in cell values as numbers\nmort22 &lt;- mort22 %&gt;%    \n    pivot_longer(\n        cols = 1:20,\n        names_to = \"age_cat\",      \n        values_to = \"count\") |&gt; \n    # names_transform = readr::parse_number) |&gt; \n    clean_names() |&gt; \n    setDT()\n\nmort22 |&gt; \n    gt(caption = \"Mortality by age categories in source data\")\n\n\n\n\n\n\n  Mortality by age categories in source data\n  \n    \n    \n      age_cat\n      count\n    \n  \n  \n    0\n165\n    1-4\n28\n    5-\n11\n    10-\n30\n    15-\n70\n    20-\n166\n    25-\n215\n    30-\n312\n    35-\n517\n    40-\n781\n    45-\n1079\n    50-\n1741\n    55-\n2640\n    60-\n3534\n    65-\n4808\n    70-\n6743\n    75-\n8833\n    80-\n9956\n    85-\n10549\n    90+\n10763\n  \n  \n  \n\n\n\n\nTransform to HP age categories\n\n\nCode\nmort22_tx &lt;- transform_mort(mort22) \n\nmort22_tx |&gt; verify(total22 == \n                    mort22_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\n# Verify that total recorded in source data equals\n# sum of age categories\nmort22_tx |&gt; \n    gt(caption = \"Mortality by HP age categories\")\n\n\n\n\n\n\n  Mortality by HP age categories\n  \n    \n    \n      age_cat\n      count\n    \n  \n  \n    0-4\n193\n    5-9\n11\n    10-14\n30\n    15-19\n70\n    20-24\n166\n    25-49\n2904\n    50-59\n4381\n    60-69\n8342\n    70-79\n15576\n    80+\n31268\n    Total\n62941\n    0-14\n234\n    15-24\n236\n    &lt;20\n304\n    45-64\n8994\n  \n  \n  \n\n\n\n\nCode\nrm(mort22, total22)\n\n\n\n\n2021\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-21-ref-tabs-5.xlsx\"\nmort21_list &lt;- get_mort_year(file_year)\nmort21 &lt;- mort21_list[[1]]\ntotal21 &lt;- mort21_list[[2]]\n\nmort21_tx &lt;- transform_mort(mort21) \n\nmort21_tx |&gt; verify(total21 == \n                    mort21_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort21, mort21_list, total21)\n\n\n\n\n2020\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-20-ref-tabs-5.xlsx\"\nmort20_list &lt;- get_mort_year(file_year)\nmort20 &lt;- mort20_list[[1]]\ntotal20 &lt;- mort20_list[[2]]\n\nmort20_tx &lt;- transform_mort(mort20) \n\nmort20_tx |&gt; verify(total20 == \n                    mort20_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort20, mort20_list, total20)\n\n\n\n\n2019\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-19-ref-tabs-5.xlsx\"\nmort19_list &lt;- get_mort_year(file_year)\nmort19 &lt;- mort19_list[[1]]\ntotal19 &lt;- mort19_list[[2]]\n\nmort19_tx &lt;- transform_mort(mort19)\n\nmort19_tx |&gt; verify(total19 == \n                    mort19_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort19, mort19_list, total19)\n\n\n\n\n2018\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-18-ref-tabs-5.xlsx\"\nmort18_list &lt;- get_mort_year(file_year)\nmort18 &lt;- mort18_list[[1]]\ntotal18 &lt;- mort18_list[[2]]\n\nmort18_tx &lt;- transform_mort(mort18)\n\nmort18_tx |&gt; verify(total18 == \n                    mort18_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort18, mort18_list, total18)\n\n\n\n\n2017\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-17-ref-tabs-5.xlsx\"\nmort17_list &lt;- get_mort_year(file_year)\nmort17 &lt;- mort17_list[[1]]\ntotal17 &lt;- mort17_list[[2]]\n\nmort17_tx &lt;- transform_mort(mort17)\n\nmort17_tx |&gt; verify(total17 == \n                    mort17_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort17, mort17_list, total17)\n\n\n\n\n2016\n\n\nCode\nsource(\"./scripts/get-mort-5-2.R\")\n\nfile_year &lt;- \"./raw-data/vital-events-16-ref-tabs-5-2.xlsx\"\nmort16_list &lt;- get_mort_5_2(file_year, yr=16)\nmort16 &lt;- mort16_list[[1]]\ntotal16 &lt;- mort16_list[[2]]\n\nmort16_tx &lt;- transform_mort(mort16)\n\nmort16_tx |&gt; verify(total16 == \n                    mort16_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort16, mort16_list, total16)\n\n\n\n\n2015\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-15-ref-tabs-5-2.xlsx\"\nmort15_list &lt;- get_mort_5_2(file_year, 15)\nmort15 &lt;- mort15_list[[1]]\ntotal15 &lt;- mort15_list[[2]]\n\nmort15_tx &lt;- transform_mort(mort15)\n\nmort15_tx |&gt; verify(total15 == \n                    mort15_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort15, mort15_list, total15)\n\n\n\n\n2014\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-14-ref-tabs-5-2.xlsx\"\nmort14_list &lt;- get_mort_5_2(file_year, yr = 14)\nmort14 &lt;- mort14_list[[1]]\ntotal14 &lt;- mort14_list[[2]]\n\nmort14_tx &lt;- transform_mort(mort14)\n\nmort14_tx |&gt; verify(total14 == \n                    mort14_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort14, mort14_list, total14)\n\n\n\n\n2013\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-13-ref-tabs-5-2.xls\"\nmort13_list &lt;- get_mort_5_2(file_year, yr = 13)\nmort13 &lt;- mort13_list[[1]]\ntotal13 &lt;- mort13_list[[2]]\n\nmort13_tx &lt;- transform_mort(mort13)\n\nmort13_tx |&gt; verify(total13 == \n                    mort13_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort13, mort13_list, total13)\n\n\n\n\n2012\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-12-ref-tabs-5-2.xls\"\nmort12_list &lt;- get_mort_5_2(file_year, yr = 12)\nmort12 &lt;- mort12_list[[1]]\ntotal12 &lt;- mort12_list[[2]]\n\nmort12_tx &lt;- transform_mort(mort12)\n\nmort12_tx |&gt; verify(total12 == \n                    mort12_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort12, mort12_list, total12)\n\n\n\n\n2011\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-11-ref-tabs-5-2.xls\"\nmort11_list &lt;- get_mort_5_2(file_year, yr = 11)\nmort11 &lt;- mort11_list[[1]]\ntotal11 &lt;- mort11_list[[2]]\n\nmort11_tx &lt;- transform_mort(mort11)\n\nmort11_tx |&gt; verify(total11 == \n                    mort11_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort11, mort11_list, total11)\n\n\n\n\n2010\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-10-t5-2.xls\"\nmort10_list &lt;- get_mort_5_2(file_year, yr = 10)\nmort10 &lt;- mort10_list[[1]]\ntotal10 &lt;- mort10_list[[2]]\n\nmort10_tx &lt;- transform_mort(mort10)\n\nmort10_tx |&gt; verify(total10 == \n                    mort10_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort10, mort10_list, total10, file_year, age_5yr, HP_cat)"
  },
  {
    "objectID": "transform.html#construct-excel-table-for-mortality",
    "href": "transform.html#construct-excel-table-for-mortality",
    "title": "Data Transformation",
    "section": "Construct Excel Table for Mortality",
    "text": "Construct Excel Table for Mortality\nThe table required by Humanity Projects has the age categories as column names (not tidy data format). The first column contains the years from 2010 to 2022.\n\n\nCode\nHP_cat &lt;- mort22_tx[, age_cat]\nmort_mx &lt;- matrix(c(\n    2010, mort10_tx[, count],\n    2011, mort11_tx[, count],\n    2012, mort12_tx[, count],\n    2013, mort13_tx[, count],\n    2014, mort14_tx[, count],\n    2015, mort15_tx[, count],\n    2016, mort16_tx[, count],\n    2017, mort17_tx[, count],\n    2018, mort18_tx[, count],\n    2019, mort19_tx[, count],\n    2020, mort20_tx[, count],\n    2021, mort21_tx[, count],\n    2022, mort22_tx[, count]\n    ),\n    byrow = TRUE,\n    nrow = 13,\n    dimnames = list(1:13, c(\"Years\", HP_cat)))\n\nmort_df &lt;- as.data.frame(mort_mx)\nwrite_xlsx(mort_df, path = \"./processed-data/Table_2_yearly_deaths.xlsx\")\n\n\nSave mortality tables\n\n\nCode\nscot_mort &lt;- mort_df |&gt; pivot_longer(cols = !Years, \n                       # reshape every column apart from Years\n                       names_to = \"age_cat\", \n                       values_to = \"mort_count\"\n)\n\nsaveRDS(scot_mort, file = \"./processed-data/scot_mort.rds\")\n# \n# # Cleanup the environment\nmort_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# # keep 'age_5yr' vector containing age categories\nremove(list = mort_all)\nrm(get_mort_5_2, get_mort_year, \n   transform_mort, mort_mx)"
  },
  {
    "objectID": "data-sources.html#population",
    "href": "data-sources.html#population",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census, 2022\nScotland’s Census, 2011\n\n\n\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision"
  },
  {
    "objectID": "data-sources.html#mortality",
    "href": "data-sources.html#mortality",
    "title": "Data Sources",
    "section": "Mortality",
    "text": "Mortality\nNational Records of Scotland, Vital Events 2022\nSection 5 contains mortality by age\nVital Events Reference Tables 2021\nVital Events Archive - Historical data back to 2001"
  },
  {
    "objectID": "data-sources.html#vaccinations",
    "href": "data-sources.html#vaccinations",
    "title": "Data Sources",
    "section": "Vaccinations",
    "text": "Vaccinations\n\nDaily Vaccinations by age group, Jan 2021 - Sept 2022\nData Dictionary\n\ndaily_url &lt;- \"https://www.opendata.nhs.scot/dataset/6dbdd466-45e3-4348-9ee3-1eac72b5a592/resource/9b99e278-b8d8-47df-8d7a-a8cf98519ac1/download/daily_vacc_age_sex_20220914.csv\"\ndownload.file(url = daily_url, \n              destfile = \"./raw-data/daily_vacc_age_sex_sept_2022.csv\")\n\n\n\nWeekly Vaccinations by dose and priority group\nViral respiratory diseases (including influenza and COVID-19) in Scotland surveillance report\n\nweekly_url &lt;- \"https://www.opendata.nhs.scot/dataset/086c153d-0fdc-4f7c-ad51-1e856c094a0e/resource/6978457e-f619-491c-885d-f60e90e81cbd/download/weekly_covid_vacc_scot_20231221.csv\"\n\ndownload.file(url = weekly_url, \n              destfile = \"./raw-data/weekly_covid_vacc_scot_20231221\")"
  }
]