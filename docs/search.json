[
  {
    "objectID": "explore.html",
    "href": "explore.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Calculate mortality rates per 10,000 persons for each age category"
  },
  {
    "objectID": "explore.html#mortality-rates",
    "href": "explore.html#mortality-rates",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Calculate mortality rates per 10,000 persons for each age category"
  },
  {
    "objectID": "explore.html#trend-lines",
    "href": "explore.html#trend-lines",
    "title": "Exploratory Data Analysis",
    "section": "Trend Lines",
    "text": "Trend Lines\n\nOlder\n\n\nCode\nolder &lt;- scot_dt[age_cat  %in% c(\"60-69\", \"70-79\", \"80+\")]\n\n# Visualize changes over time\ng_old &lt;- ggplot(older, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  # use custom palette\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\", \"darkblue\")) + \n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_old)\n\n\n\n\n\n\n\n\nMiddle Ages\n\n\nCode\nworking &lt;- scot_dt[age_cat %in% c(\"20-24\", \"25-49\", \"50-59\"), ]\n\ng_work &lt;- ggplot(working, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  # use brewer colour palettes\n  scale_color_brewer(palette=\"Dark2\") +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_work)\n\n\n\n\n\n\n\n\nTeens\n\n\nCode\nteens &lt;- scot_dt[age_cat %in% c(\"10-14\", \"15-19\")]\n\ng_teen &lt;- ggplot(teens, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  # Use grey scale\n  scale_color_grey() + theme_classic() +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_teen)\n\n\n\n\n\n\n\n\nYoung\n\n\nCode\nyoung &lt;- scot_dt[age_cat %in% c(\"0-4\", \"5-9\")]\n\ng_young &lt;- ggplot(young, aes(x = Years, y = rate_adj)) +\n  geom_line(aes(colour = age_cat)) +\n  geom_point(aes(color = age_cat)) +\n  scale_color_brewer(palette=\"Dark2\") +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \nggplotly(g_young)"
  },
  {
    "objectID": "data-sources.html",
    "href": "data-sources.html",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census, 2022\nScotland’s Census, 2011\n\n\n\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision"
  },
  {
    "objectID": "data-sources.html#census-and-statistics-service-of-scotland",
    "href": "data-sources.html#census-and-statistics-service-of-scotland",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census\nScotland’s Census, 2022\nScotland’s Census, 2011\nNational Records of Scotland:\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision\n\n\n\nNational Records of Scotland, Vital Events 2022\nSection 5 contains mortality by age\nVital Events Reference Tables 2021\nVital Events Archive - Historical data back to 2001"
  },
  {
    "objectID": "getting-cleaning-data.html",
    "href": "getting-cleaning-data.html",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Code\nsource(\"./scripts/get-census-11.R\")   \n# Population counts for each year of age\npop11_1yr &lt;- get_census_11(is_plot = 0)  \n\n# Section age variable into the 7 HP age categories\npop11 &lt;- make_groups(pop11_1yr, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(pop11_1yr, get_census_11)\n\n\n\n\n\n\n\n\n\n\nSimilar to Census 2011, population numbers are for each year of age\nsource(\"./scripts/get-pop-by-year.R\")\nfile_21 &lt;- \"./raw-data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"F4:CR5\"\n\npop21 &lt;- get_pop_by_year(file_21, sheet_21, range_21)\n\npop21 &lt;- make_groups(pop21, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_21, range_21, sheet_21)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\n\nfile_20 &lt;- \"./raw-data/mid-year-pop-est-20-data.xlsx\"\nsheet_20 &lt;- \"Table 1\"\nrange_20 &lt;- \"F4:CR5\"\n\npop20 &lt;- get_pop(file_20, is_16 = 0)\npop20[, age := group_5yr][, age_cat := NULL]\n\npop20 &lt;- make_groups(pop20, is_pop = 1, cat_19 = FALSE)\nrm(file_20, range_20, sheet_20)\n\n\n\n\n\n\n\n\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n\nCode\nfile_19 &lt;- \"./raw-data/mid-year-pop-est-19-data.xlsx\"  \n\npop19 &lt;- get_pop(file_19, is_16 = 0) \npop19[, age := group_5yr][, age_cat := NULL]\n\npop19 &lt;- make_groups(pop19, is_pop = 1, cat_19 = FALSE)\nrm(file_19)\n\n\n\n\n\n\n\nCode\nfile_18 &lt;- \"./raw-data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18 &lt;- get_pop(file_18, is_16 = 0) \npop18[, age := group_5yr][, age_cat := NULL]\n\npop18 &lt;- make_groups(pop18, is_pop = 1, cat_19 = FALSE)\nrm(file_18)\n\n\n\n\n\n\n\nCode\nfile_17 &lt;- \"./raw-data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17 &lt;- get_pop(file_17, is_16 = 0) \npop17[, age := group_5yr][, age_cat := NULL]\n\npop17 &lt;- make_groups(pop17, is_pop = 1, cat_19 = FALSE)\nrm(file_17)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\nfile_16 &lt;- \"./raw-data/16-mid-year-pe-tab1.xlsx\" \n\npop16 &lt;- get_pop(file_16, is_16 = 1)\npop16[, age := group_5yr][, age_cat := NULL]\n\npop16 &lt;- make_groups(pop16, is_pop = 1, cat_19 = FALSE)\nrm(file_16)\n\n\n\n\n\n\n\nCode\nfile_15 &lt;- \"./raw-data/15mype-cahb-tab1.xlsx\" \n\npop15 &lt;- get_pop(file_15, is_16 = 0) \npop15[, age := group_5yr][, age_cat := NULL]\n\npop15 &lt;- make_groups(pop15, is_pop = 1, cat_19 = FALSE)\nrm(file_15)\n\n\n\n\n\n\n\nCode\nfile_14 &lt;- \"./raw-data/14mype-cahb-all-tab.xlsx\"  \n\npop14 &lt;- get_pop(file_14, is_16 = 0) \npop14[, age := group_5yr][, age_cat := NULL]\n\npop14 &lt;- make_groups(pop14, is_pop = 1, cat_19 = FALSE)\nrm(file_14)\n\n\n\n\n\n\n\nCode\nfile_13 &lt;- \"./raw-data/13mype-cahb-tab1.xlsx\"  \n\npop13 &lt;- get_pop(file_13, is_16 = 0) \npop13[, age := group_5yr][, age_cat := NULL]\n\npop13 &lt;- make_groups(pop13, is_pop = 1, cat_19 = FALSE)\nrm(file_13)\n\n\n\n\n\n\n\nCode\nfile_12 &lt;- \"./raw-data/12mype-cahb-tab1.xlsx\"  \n\npop12 &lt;- get_pop(file_12, is_16 = 0) \npop12[, age := group_5yr][, age_cat := NULL]\n\npop12 &lt;- make_groups(pop12, is_pop = 1, cat_19 = FALSE)\nrm(file_12)\n\n\n\n\n\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nsource(\"./scripts/get-pop-by-year.R\")\n\nfile_10 &lt;- \"./raw-data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"C4:CO5\"\n\npop10 &lt;- get_pop_by_year(file_10, sheet_10, range_10)\n\npop10 &lt;- make_groups(pop10, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_10, range_10, sheet_10)\n\n\n\n\nCode\n# pop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# \n# pop_dt &lt;- rbind(pop10, pop11, pop12, pop13, pop14, pop15,\n#                  pop16, pop17, pop18, pop19, pop20, pop21, \n#                  pop22)\n# \n# saveRDS(pop_dt, file = \"./processed-data/scot-pop.rds\")\n# \n# # Cleanup the environment\n# # keep 'group5yr' vector containing age categories\n# remove(list = pop_all)\nrm(get_pop, get_pop_by_year)"
  },
  {
    "objectID": "getting-cleaning-data.html#scotlands-census",
    "href": "getting-cleaning-data.html#scotlands-census",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Code\nsource(\"./scripts/get-census-11.R\")   \n# Population counts for each year of age\npop11_1yr &lt;- get_census_11(is_plot = 0)  \n\n# Section age variable into the 7 HP age categories\npop11 &lt;- make_groups(pop11_1yr, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(pop11_1yr, get_census_11)"
  },
  {
    "objectID": "getting-cleaning-data.html#nrs-mid-year-population-estimates",
    "href": "getting-cleaning-data.html#nrs-mid-year-population-estimates",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Similar to Census 2011, population numbers are for each year of age\nsource(\"./scripts/get-pop-by-year.R\")\nfile_21 &lt;- \"./raw-data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"F4:CR5\"\n\npop21 &lt;- get_pop_by_year(file_21, sheet_21, range_21)\n\npop21 &lt;- make_groups(pop21, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_21, range_21, sheet_21)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\n\nfile_20 &lt;- \"./raw-data/mid-year-pop-est-20-data.xlsx\"\nsheet_20 &lt;- \"Table 1\"\nrange_20 &lt;- \"F4:CR5\"\n\npop20 &lt;- get_pop(file_20, is_16 = 0)\npop20[, age := group_5yr][, age_cat := NULL]\n\npop20 &lt;- make_groups(pop20, is_pop = 1, cat_19 = FALSE)\nrm(file_20, range_20, sheet_20)\n\n\n\n\n\n\n\n\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n\nCode\nfile_19 &lt;- \"./raw-data/mid-year-pop-est-19-data.xlsx\"  \n\npop19 &lt;- get_pop(file_19, is_16 = 0) \npop19[, age := group_5yr][, age_cat := NULL]\n\npop19 &lt;- make_groups(pop19, is_pop = 1, cat_19 = FALSE)\nrm(file_19)\n\n\n\n\n\n\n\nCode\nfile_18 &lt;- \"./raw-data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18 &lt;- get_pop(file_18, is_16 = 0) \npop18[, age := group_5yr][, age_cat := NULL]\n\npop18 &lt;- make_groups(pop18, is_pop = 1, cat_19 = FALSE)\nrm(file_18)\n\n\n\n\n\n\n\nCode\nfile_17 &lt;- \"./raw-data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17 &lt;- get_pop(file_17, is_16 = 0) \npop17[, age := group_5yr][, age_cat := NULL]\n\npop17 &lt;- make_groups(pop17, is_pop = 1, cat_19 = FALSE)\nrm(file_17)\n\n\n\n\n\n\n\nCode\nsource(\"./scripts/get-pop.R\")\nfile_16 &lt;- \"./raw-data/16-mid-year-pe-tab1.xlsx\" \n\npop16 &lt;- get_pop(file_16, is_16 = 1)\npop16[, age := group_5yr][, age_cat := NULL]\n\npop16 &lt;- make_groups(pop16, is_pop = 1, cat_19 = FALSE)\nrm(file_16)\n\n\n\n\n\n\n\nCode\nfile_15 &lt;- \"./raw-data/15mype-cahb-tab1.xlsx\" \n\npop15 &lt;- get_pop(file_15, is_16 = 0) \npop15[, age := group_5yr][, age_cat := NULL]\n\npop15 &lt;- make_groups(pop15, is_pop = 1, cat_19 = FALSE)\nrm(file_15)\n\n\n\n\n\n\n\nCode\nfile_14 &lt;- \"./raw-data/14mype-cahb-all-tab.xlsx\"  \n\npop14 &lt;- get_pop(file_14, is_16 = 0) \npop14[, age := group_5yr][, age_cat := NULL]\n\npop14 &lt;- make_groups(pop14, is_pop = 1, cat_19 = FALSE)\nrm(file_14)\n\n\n\n\n\n\n\nCode\nfile_13 &lt;- \"./raw-data/13mype-cahb-tab1.xlsx\"  \n\npop13 &lt;- get_pop(file_13, is_16 = 0) \npop13[, age := group_5yr][, age_cat := NULL]\n\npop13 &lt;- make_groups(pop13, is_pop = 1, cat_19 = FALSE)\nrm(file_13)\n\n\n\n\n\n\n\nCode\nfile_12 &lt;- \"./raw-data/12mype-cahb-tab1.xlsx\"  \n\npop12 &lt;- get_pop(file_12, is_16 = 0) \npop12[, age := group_5yr][, age_cat := NULL]\n\npop12 &lt;- make_groups(pop12, is_pop = 1, cat_19 = FALSE)\nrm(file_12)\n\n\n\n\n\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nsource(\"./scripts/get-pop-by-year.R\")\n\nfile_10 &lt;- \"./raw-data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"C4:CO5\"\n\npop10 &lt;- get_pop_by_year(file_10, sheet_10, range_10)\n\npop10 &lt;- make_groups(pop10, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_10, range_10, sheet_10)\n\n\n\n\nCode\n# pop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# \n# pop_dt &lt;- rbind(pop10, pop11, pop12, pop13, pop14, pop15,\n#                  pop16, pop17, pop18, pop19, pop20, pop21, \n#                  pop22)\n# \n# saveRDS(pop_dt, file = \"./processed-data/scot-pop.rds\")\n# \n# # Cleanup the environment\n# # keep 'group5yr' vector containing age categories\n# remove(list = pop_all)\nrm(get_pop, get_pop_by_year)"
  },
  {
    "objectID": "transform.html",
    "href": "transform.html",
    "title": "Data Transformation",
    "section": "",
    "text": "Code\n# Five year age categories:\nage_5yr &lt;- c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \n                         \"25-29\", \"30-34\", \"35-39\", \"40-44\", \n                         \"45-49\", \"50-54\", \"55-59\", \"60-64\", \n                         \"65-69\", \"70-74\", \"75-79\",\n                         \"80-84\", \"85-89\", \"90 plus\")"
  },
  {
    "objectID": "transform.html#scotlands-census",
    "href": "transform.html#scotlands-census",
    "title": "Data Transformation",
    "section": "Scotland’s Census",
    "text": "Scotland’s Census\n\n2022\n\n\nImport excel sheet giving numbers of persons by 5-year age groups for year 2022. /n Verify that total recorded in source data equals total computed from the transformed data\nsource(\"./scripts/get-census-22.R\")\nsource(\"./scripts/transform-pop.R\")\n\ncensus22 &lt;- get_census_22(is_plot=0)\n# Population counts are in 5-year age groups\npop22_5yr &lt;- census22[[1]]\ntotal22 &lt;- census22[[2]]\n\n# Convert age categories to HP grouping\n# Source data contains 19 categories\npop22 &lt;- transform_pop(pop22_5yr)\n\nverify(pop22, total22 == pop22[1:10, sum(count)],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nImport excel sheet giving numbers of persons by 5-year age groups for year 2022. /n Verify that total recorded in source data equals total computed from the transformed data\n# cleanup\nrm(census22, pop22_5yr, total22, get_census_22)\n\n\n\n\n2011\n\n\nSource data for year 2022 records counts by single year of age. /nTRUE output means that total count recorded in source data equals sum of age categories\nsource(\"./scripts/get-census-11.R\")   \n# Population counts for each year of age\npop11_5yr &lt;- get_census_11()  \n\n# Section age variable into the HP age categories\npop11 &lt;- transform_pop(pop11_5yr)\n\n# cleanup\nrm(pop11_5yr, get_census_11)"
  },
  {
    "objectID": "transform.html#nrs-mid-year-population-estimates",
    "href": "transform.html#nrs-mid-year-population-estimates",
    "title": "Data Transformation",
    "section": "NRS Mid-Year Population Estimates",
    "text": "NRS Mid-Year Population Estimates\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n2021\n\n\nSimilar to Census 2011, population numbers are for each year of age\nsource(\"./scripts/get-pop-by-year.R\")\nsource(\"./scripts/transform-pop-by-year.R\")\n\nfile_21 &lt;- \"./raw-data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"E4:CR5\"\n\npop21_list &lt;- get_pop_by_year(file_21, sheet_21, range_21)\npop21 &lt;- pop21_list[[1]]\ntotal21 &lt;- pop21_list[[2]]\n\npop21 &lt;- transform_pop_by_year(pop21)\n\n# Check total recorded in source data equals sum of age categories\nverify(pop21, total21 == pop21[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nSimilar to Census 2011, population numbers are for each year of age\n# cleanup\nrm(file_21, range_21, sheet_21, total21, pop21_list)\n\n\n\n\n2020\n\n\nCode\nsource(\"./scripts/get-pop.R\")\n\nfile_20 &lt;- \"./raw-data/mid-year-pop-est-20-data.xlsx\"\n# sheet_20 &lt;- \"Table 1\"\n# range_20 &lt;- \"F4:CR5\"\n\npop20_list &lt;- get_pop(file_20, is_16 = 0)\npop20 &lt;- pop20_list[[1]]\ntotal20 &lt;- pop20_list[[2]]\n\npop20[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop20 &lt;- transform_pop(pop20)\n\nverify(pop20, total20 == pop20[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_20, pop20_list, total20)"
  },
  {
    "objectID": "transform.html#nrs-mid-year-population-estimates---archive",
    "href": "transform.html#nrs-mid-year-population-estimates---archive",
    "title": "Data Transformation",
    "section": "NRS Mid-Year Population Estimates - Archive",
    "text": "NRS Mid-Year Population Estimates - Archive\n\n2019\n\n\nCode\nfile_19 &lt;- \"./raw-data/mid-year-pop-est-19-data.xlsx\"  \n\npop19_list &lt;- get_pop(file_19, is_16 = 0) \npop19 &lt;- pop19_list[[1]]\ntotal19 &lt;- pop19_list[[2]]\npop19[, age_cat := age_5yr]\n\npop19 &lt;- transform_pop(pop19)\n\nverify(pop19, total19 == pop19[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_19, pop19_list, total19)\n\n\n\n\n2018\n\n\nCode\nfile_18 &lt;- \"./raw-data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18_list &lt;- get_pop(file_18, is_16 = 0) \npop18 &lt;- pop18_list[[1]]\ntotal18 &lt;- pop18_list[[2]]\npop18[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop18 &lt;- transform_pop(pop18)\n\nverify(pop18, total18 == pop18[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_18, pop18_list, total18)\n\n\n\n\n2017\n\n\nCode\nfile_17 &lt;- \"./raw-data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17_list &lt;- get_pop(file_17, is_16 = 0) \npop17 &lt;- pop17_list[[1]]\ntotal17 &lt;- pop17_list[[2]]\npop17[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop17 &lt;- transform_pop(pop17)\n\nverify(pop17, total17 == pop17[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_17, pop17_list, total17)\n\n\n\n\n2016\n\n\nCode\nsource(\"./scripts/get-pop.R\")\nfile_16 &lt;- \"./raw-data/16-mid-year-pe-tab1.xlsx\" \n\npop16_list &lt;- get_pop(file_16, is_16 = 1)\npop16 &lt;- pop16_list[[1]]\ntotal16 &lt;- pop16_list[[2]]\npop16[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop16 &lt;- transform_pop(pop16)\n\nverify(pop16, total16 == pop16[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_16, pop16_list, total16)\n\n\n\n\n2015\n\n\nCode\nfile_15 &lt;- \"./raw-data/15mype-cahb-tab1.xlsx\" \n\npop15_list &lt;- get_pop(file_15, is_16 = 0) \npop15 &lt;- pop15_list[[1]]\ntotal15 &lt;- pop15_list[[2]]\npop15[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop15 &lt;- transform_pop(pop15)\n\nverify(pop15, total15 == pop15[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_15, pop15_list, total15)\n\n\n\n\n2014\n\n\nCode\nfile_14 &lt;- \"./raw-data/14mype-cahb-all-tab.xlsx\"  \n\npop14_list &lt;- get_pop(file_14, is_16 = 0) \npop14 &lt;- pop14_list[[1]]\ntotal14 &lt;- pop14_list[[2]]\npop14[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop14 &lt;- transform_pop(pop14)\n\nverify(pop14, total14 == pop14[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_14, pop14_list, total14)\n\n\n\n\n2013\n\n\nCode\nfile_13 &lt;- \"./raw-data/13mype-cahb-tab1.xlsx\"  \n\npop13_list &lt;- get_pop(file_13, is_16 = 0) \npop13 &lt;- pop13_list[[1]]\ntotal13 &lt;- pop13_list[[2]]\npop13[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop13 &lt;- transform_pop(pop13)\n\nverify(pop13, total13 == pop13[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_13, pop13_list, total13)\n\n\n\n\n2012\n\n\nCode\nfile_12 &lt;- \"./raw-data/12mype-cahb-tab1.xlsx\"  \n\npop12_list &lt;- get_pop(file_12, is_16 = 0) \npop12 &lt;- pop12_list[[1]]\ntotal12 &lt;- pop12_list[[2]]\npop12[, age_cat := age_5yr]\n\n# Source data contains 19 age categories\npop12 &lt;- transform_pop(pop12)\n\nverify(pop12, total12 == pop12[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(file_12, pop12_list, total12)\n\n\n\n\n2010\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nfile_10 &lt;- \"./raw-data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"B4:CO5\"\n\npop10_list &lt;- get_pop_by_year(file_10, sheet_10, range_10)\npop10 &lt;- pop10_list[[1]]\ntotal10 &lt;- pop10_list[[2]]\npop10 &lt;- transform_pop_by_year(pop10)\n\n# Check total recorded in source data equals sum of age categories\nverify(pop10, total10 == pop10[11, count],\n       success_fun = success_logical)\n\n\n[1] TRUE\n\n\nconvert single year population numbers to age categories\n# cleanup\nrm(file_10, range_10, sheet_10, pop10_list, total10)"
  },
  {
    "objectID": "transform.html#construct-excel-table-for-population",
    "href": "transform.html#construct-excel-table-for-population",
    "title": "Data Transformation",
    "section": "Construct Excel Table for Population",
    "text": "Construct Excel Table for Population\nThe table required by Humanity Projects has the age categories as column names (not tidy data format). The first column contains the years from 2010 to 2022.\n\n\nCode\nHP_cat &lt;- pop22[, age_cat]\npop_mx &lt;- matrix(c(\n    2010, pop10[, count],\n    2011, pop11[, count],\n    2012, pop12[, count],\n    2013, pop13[, count],\n    2014, pop14[, count],\n    2015, pop15[, count],\n    2016, pop16[, count],\n    2017, pop17[, count],\n    2018, pop18[, count],\n    2019, pop19[, count],\n    2020, pop20[, count],\n    2021, pop21[, count],\n    2022, pop22[, count]\n    ),\n    byrow = TRUE,\n    nrow = 13,\n    dimnames = list(1:13, c(\"Years\", HP_cat)))\n\npop_table &lt;- as.data.frame(pop_mx)\nwrite_xlsx(pop_table, path = \"./processed-data/Table_4_yearly_pop_counts.xlsx\")\n\n\nSave population tables for exploratory analysis\n\n\nCode\n# In the \"pop_df\" dataframe, age categories are spread across \n# columns.  The cells contain population counts.  \n# The \"pivot_longer()\" function transposes the age categories into\n# a single column.\nscot_pop &lt;- pop_table |&gt; pivot_longer(cols = !Years, \n                       # reshape every column apart from Years\n                       names_to = \"age_cat\", \n                       values_to = \"pop_count\"\n)\nsetnames(scot_pop, \"Years\", \"year\")\n\nsaveRDS(scot_pop, file = \"./processed-data/scot_pop.rds\")\n# \n# # Cleanup the environment\npop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# # keep 'age_5yr' vector containing age categories\nremove(list = pop_all)\nrm(get_pop, get_pop_by_year, \n   transform_pop, transform_pop_by_year, pop_mx, pop_all)"
  },
  {
    "objectID": "transform.html#mortality",
    "href": "transform.html#mortality",
    "title": "Data Transformation",
    "section": "Mortality",
    "text": "Mortality\n\n2022\nInput data and convert to table\n\n\nCode\nsource(\"./scripts/get-mort-year.R\")\nsource(\"./scripts/transform-mort.R\")\n\nfile_year &lt;- \"./raw-data/vital-events-22-ref-tabs-5.xlsx\"\nmort22 &lt;- read_excel(file_year, sheet = 4,\n                              range = \"C4:W6\") |&gt; \n    setDT()\n    \n# First row is blank / NAs\nmort22 &lt;- mort22[2,]\n# Extract the total count contained in the first column\ntotal22 &lt;- mort22[, 1] |&gt; \n    as.numeric()\n# Remove first column\nmort22[, 1 := NULL]\n\n# age category variable is spread across columns\n# mortality counts are stored in cell values as numbers\nmort22 &lt;- mort22 %&gt;%    \n    pivot_longer(\n        cols = 1:20,\n        names_to = \"age_cat\",      \n        values_to = \"count\") |&gt; \n    # names_transform = readr::parse_number) |&gt; \n    clean_names() |&gt; \n    setDT()\n\nmort22 |&gt; \n    gt(caption = \"Mortality by age categories in source data\")\n\n\n\n\n\n\n  Mortality by age categories in source data\n  \n    \n    \n      age_cat\n      count\n    \n  \n  \n    0\n165\n    1-4\n28\n    5-\n11\n    10-\n30\n    15-\n70\n    20-\n166\n    25-\n215\n    30-\n312\n    35-\n517\n    40-\n781\n    45-\n1079\n    50-\n1741\n    55-\n2640\n    60-\n3534\n    65-\n4808\n    70-\n6743\n    75-\n8833\n    80-\n9956\n    85-\n10549\n    90+\n10763\n  \n  \n  \n\n\n\n\nTransform to HP age categories\n\n\nCode\nmort22_tx &lt;- transform_mort(mort22) \n\nmort22_tx |&gt; verify(total22 == \n                    mort22_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\n# Verify that total recorded in source data equals\n# sum of age categories\nmort22_tx |&gt; \n    gt(caption = \"Mortality by HP age categories\")\n\n\n\n\n\n\n  Mortality by HP age categories\n  \n    \n    \n      age_cat\n      count\n    \n  \n  \n    0-4\n193\n    5-9\n11\n    10-14\n30\n    15-19\n70\n    20-24\n166\n    25-49\n2904\n    50-59\n4381\n    60-69\n8342\n    70-79\n15576\n    80+\n31268\n    Total\n62941\n    0-14\n234\n    15-24\n236\n    &lt;20\n304\n    45-64\n8994\n  \n  \n  \n\n\n\n\nCode\nrm(mort22, total22)\n\n\n\n\n2021\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-21-ref-tabs-5.xlsx\"\nmort21_list &lt;- get_mort_year(file_year)\nmort21 &lt;- mort21_list[[1]]\ntotal21 &lt;- mort21_list[[2]]\n\nmort21_tx &lt;- transform_mort(mort21) \n\nmort21_tx |&gt; verify(total21 == \n                    mort21_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort21, mort21_list, total21)\n\n\n\n\n2020\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-20-ref-tabs-5.xlsx\"\nmort20_list &lt;- get_mort_year(file_year)\nmort20 &lt;- mort20_list[[1]]\ntotal20 &lt;- mort20_list[[2]]\n\nmort20_tx &lt;- transform_mort(mort20) \n\nmort20_tx |&gt; verify(total20 == \n                    mort20_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort20, mort20_list, total20)\n\n\n\n\n2019\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-19-ref-tabs-5.xlsx\"\nmort19_list &lt;- get_mort_year(file_year)\nmort19 &lt;- mort19_list[[1]]\ntotal19 &lt;- mort19_list[[2]]\n\nmort19_tx &lt;- transform_mort(mort19)\n\nmort19_tx |&gt; verify(total19 == \n                    mort19_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort19, mort19_list, total19)\n\n\n\n\n2018\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-18-ref-tabs-5.xlsx\"\nmort18_list &lt;- get_mort_year(file_year)\nmort18 &lt;- mort18_list[[1]]\ntotal18 &lt;- mort18_list[[2]]\n\nmort18_tx &lt;- transform_mort(mort18)\n\nmort18_tx |&gt; verify(total18 == \n                    mort18_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort18, mort18_list, total18)\n\n\n\n\n2017\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-17-ref-tabs-5.xlsx\"\nmort17_list &lt;- get_mort_year(file_year)\nmort17 &lt;- mort17_list[[1]]\ntotal17 &lt;- mort17_list[[2]]\n\nmort17_tx &lt;- transform_mort(mort17)\n\nmort17_tx |&gt; verify(total17 == \n                    mort17_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort17, mort17_list, total17)\n\n\n\n\n2016\n\n\nCode\nsource(\"./scripts/get-mort-5-2.R\")\n\nfile_year &lt;- \"./raw-data/vital-events-16-ref-tabs-5-2.xlsx\"\nmort16_list &lt;- get_mort_5_2(file_year, yr=16)\nmort16 &lt;- mort16_list[[1]]\ntotal16 &lt;- mort16_list[[2]]\n\nmort16_tx &lt;- transform_mort(mort16)\n\nmort16_tx |&gt; verify(total16 == \n                    mort16_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort16, mort16_list, total16)\n\n\n\n\n2015\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-15-ref-tabs-5-2.xlsx\"\nmort15_list &lt;- get_mort_5_2(file_year, 15)\nmort15 &lt;- mort15_list[[1]]\ntotal15 &lt;- mort15_list[[2]]\n\nmort15_tx &lt;- transform_mort(mort15)\n\nmort15_tx |&gt; verify(total15 == \n                    mort15_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort15, mort15_list, total15)\n\n\n\n\n2014\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-14-ref-tabs-5-2.xlsx\"\nmort14_list &lt;- get_mort_5_2(file_year, yr = 14)\nmort14 &lt;- mort14_list[[1]]\ntotal14 &lt;- mort14_list[[2]]\n\nmort14_tx &lt;- transform_mort(mort14)\n\nmort14_tx |&gt; verify(total14 == \n                    mort14_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort14, mort14_list, total14)\n\n\n\n\n2013\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-13-ref-tabs-5-2.xls\"\nmort13_list &lt;- get_mort_5_2(file_year, yr = 13)\nmort13 &lt;- mort13_list[[1]]\ntotal13 &lt;- mort13_list[[2]]\n\nmort13_tx &lt;- transform_mort(mort13)\n\nmort13_tx |&gt; verify(total13 == \n                    mort13_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort13, mort13_list, total13)\n\n\n\n\n2012\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-12-ref-tabs-5-2.xls\"\nmort12_list &lt;- get_mort_5_2(file_year, yr = 12)\nmort12 &lt;- mort12_list[[1]]\ntotal12 &lt;- mort12_list[[2]]\n\nmort12_tx &lt;- transform_mort(mort12)\n\nmort12_tx |&gt; verify(total12 == \n                    mort12_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort12, mort12_list, total12)\n\n\n\n\n2011\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-11-ref-tabs-5-2.xls\"\nmort11_list &lt;- get_mort_5_2(file_year, yr = 11)\nmort11 &lt;- mort11_list[[1]]\ntotal11 &lt;- mort11_list[[2]]\n\nmort11_tx &lt;- transform_mort(mort11)\n\nmort11_tx |&gt; verify(total11 == \n                    mort11_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort11, mort11_list, total11)\n\n\n\n\n2010\n\n\nCode\nfile_year &lt;- \"./raw-data/vital-events-10-t5-2.xls\"\nmort10_list &lt;- get_mort_5_2(file_year, yr = 10)\nmort10 &lt;- mort10_list[[1]]\ntotal10 &lt;- mort10_list[[2]]\n\nmort10_tx &lt;- transform_mort(mort10)\n\nmort10_tx |&gt; verify(total10 == \n                    mort10_tx[age_cat == \"Total\", count],\n                    success_fun = success_logical)\n\n\n[1] TRUE\n\n\nCode\nrm(mort10, mort10_list, total10, file_year, age_5yr, HP_cat)"
  },
  {
    "objectID": "transform.html#construct-excel-table-for-mortality",
    "href": "transform.html#construct-excel-table-for-mortality",
    "title": "Data Transformation",
    "section": "Construct Excel Table for Mortality",
    "text": "Construct Excel Table for Mortality\nThe table required by Humanity Projects has the age categories as column names (not tidy data format). The first column contains the years from 2010 to 2022.\n\n\nCode\nHP_cat &lt;- mort22_tx[, age_cat]\nmort_mx &lt;- matrix(c(\n    2010, mort10_tx[, count],\n    2011, mort11_tx[, count],\n    2012, mort12_tx[, count],\n    2013, mort13_tx[, count],\n    2014, mort14_tx[, count],\n    2015, mort15_tx[, count],\n    2016, mort16_tx[, count],\n    2017, mort17_tx[, count],\n    2018, mort18_tx[, count],\n    2019, mort19_tx[, count],\n    2020, mort20_tx[, count],\n    2021, mort21_tx[, count],\n    2022, mort22_tx[, count]\n    ),\n    byrow = TRUE,\n    nrow = 13,\n    dimnames = list(1:13, c(\"Years\", HP_cat)))\n\nmort_df &lt;- as.data.frame(mort_mx)\nwrite_xlsx(mort_df, path = \"./processed-data/Table_2_yearly_deaths.xlsx\")\n\n\nSave mortality tables\n\n\nCode\nscot_mort &lt;- mort_df |&gt; pivot_longer(cols = !Years, \n                       # reshape every column apart from Years\n                       names_to = \"age_cat\", \n                       values_to = \"mort_count\"\n)\nsetnames(scot_mort, \"Years\", \"year\")\nsaveRDS(scot_mort, file = \"./processed-data/scot_mort.rds\")\n# \n# # Cleanup the environment\nmort_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# # keep 'age_5yr' vector containing age categories\nremove(list = mort_all)\nrm(get_mort_5_2, get_mort_year, \n   transform_mort, mort_mx)"
  },
  {
    "objectID": "data-sources.html#population",
    "href": "data-sources.html#population",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census, 2022\nScotland’s Census, 2011\n\n\n\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision"
  },
  {
    "objectID": "data-sources.html#mortality",
    "href": "data-sources.html#mortality",
    "title": "Data Sources",
    "section": "Mortality",
    "text": "Mortality\nNational Records of Scotland, Vital Events 2022\nSection 5 contains mortality by age\nVital Events Reference Tables 2021\nVital Events Archive - Historical data back to 2001"
  },
  {
    "objectID": "data-sources.html#vaccinations",
    "href": "data-sources.html#vaccinations",
    "title": "Data Sources",
    "section": "Vaccinations",
    "text": "Vaccinations\n\nDaily Vaccinations by age group, Jan 2021 - Sept 2022\nData Dictionary\n\ndaily_url &lt;- \"https://www.opendata.nhs.scot/dataset/6dbdd466-45e3-4348-9ee3-1eac72b5a592/resource/9b99e278-b8d8-47df-8d7a-a8cf98519ac1/download/daily_vacc_age_sex_20220914.csv\"\ndownload.file(url = daily_url, \n              destfile = \"./raw-data/daily_vacc_age_sex_sept_2022.csv\")\n\n\n\nWeekly Vaccinations by dose and priority group\nViral respiratory diseases (including influenza and COVID-19) in Scotland surveillance report\n\nweekly_url &lt;- \"https://www.opendata.nhs.scot/dataset/086c153d-0fdc-4f7c-ad51-1e856c094a0e/resource/6978457e-f619-491c-885d-f60e90e81cbd/download/weekly_covid_vacc_scot_20231221.csv\"\n\ndownload.file(url = weekly_url, \n              destfile = \"./raw-data/weekly_covid_vacc_scot_20231221\")"
  },
  {
    "objectID": "index.html#method-1-number-of-deaths-above-average",
    "href": "index.html#method-1-number-of-deaths-above-average",
    "title": "Change in Mortality Rates for Scotland",
    "section": "Method 1: Number of Deaths above Average",
    "text": "Method 1: Number of Deaths above Average"
  },
  {
    "objectID": "index.html#method-2a-death-rate-percent-change-from-2019-baseline",
    "href": "index.html#method-2a-death-rate-percent-change-from-2019-baseline",
    "title": "Change in Mortality Rates for Scotland",
    "section": "Method 2A: Death Rate Percent Change from 2019 Baseline",
    "text": "Method 2A: Death Rate Percent Change from 2019 Baseline"
  },
  {
    "objectID": "index.html#method-2c-death-rate-difference-from-linear-fit",
    "href": "index.html#method-2c-death-rate-difference-from-linear-fit",
    "title": "Change in Mortality Rates for Scotland",
    "section": "Method 2C: Death Rate difference from Linear Fit",
    "text": "Method 2C: Death Rate difference from Linear Fit\n\n\nLinear Model Evaluation\nOnly age categories 0-14 and 70-79 have adequate \\(r^2\\) value."
  },
  {
    "objectID": "explore.html#method-1-deaths-in-excess-of-the-average",
    "href": "explore.html#method-1-deaths-in-excess-of-the-average",
    "title": "Exploratory Data Analysis",
    "section": "Method 1: Deaths in excess of the average",
    "text": "Method 1: Deaths in excess of the average\n\n\nCompute the average number of deaths from 2015 to 2019, by age category.\nCalculate difference from average, expressed as a percentage.\n\n\n\nCode\navg_vec &lt;- scot_mort[year %in% 2015:2019, \n                        floor(mean(mort_count)), \n         by = age_cat ][, V1]\n# extract years 2020 to 2022\nscot_mort_xs &lt;- scot_mort[year %in% 2020:2022, .(year, age_cat, mort_count)]\n\n# Excess mortality compared to average as a percentage\nscot_mort_xs[, mort_xs := (mort_count/avg_vec - 1)*100, by = year] |&gt; \n    head() |&gt; \n    gt()\n\n\n\n\n\n\n  \n    \n    \n      year\n      age_cat\n      mort_count\n      mort_xs\n    \n  \n  \n    2020\n0-14\n226\n-10.671937\n    2020\n15-24\n303\n17.898833\n    2020\n25-49\n3286\n7.631838\n    2020\n50-59\n4387\n10.950936\n    2020\n60-69\n8167\n6.382702\n    2020\n70-79\n15562\n12.948178\n  \n  \n  \n\n\n\n\nVisualise\n\n\nCode\nscot_mort_xs[, year := as.factor(year)]\nggplot(data=scot_mort_xs, aes(x=age_cat, y=mort_xs, \n                        fill= year)) +\n  geom_bar(stat=\"identity\", position=position_dodge())+\n  scale_fill_brewer(palette=\"Paired\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  labs(\n      title =\"older have greater excess deaths\",\n      subtitle = waiver(),\n      caption = \"NRS census, popln estimates, and \\n Vital Events register\",\n      x = \"age category\",\n      y = \"death rate above average\") +\n  annotate(geom = \"text\", x = \"0-14\", y = 15,\n             label = \"Method 1\") +\n  theme_minimal() +\n  theme(legend.position='top', \n        legend.justification='left',\n        legend.direction='horizontal') \n\n\n\n\n\nCode\n# ggsave(\"./figures/method1-diff-avg.jpeg\")"
  },
  {
    "objectID": "explore.html#method-2a-difference-from-2019-baseline",
    "href": "explore.html#method-2a-difference-from-2019-baseline",
    "title": "Exploratory Data Analysis",
    "section": "Method 2A: Difference from 2019 baseline",
    "text": "Method 2A: Difference from 2019 baseline\n\nThe baseline level is the 2019 numbers for each age group. Calculate the difference from the baseline, expressed as a percentage.\n\n\nCode\n# Set the base rate from year 2019 values\nbase &lt;- scot_dt[year==2019, rate]\n# Create a baseline vector for the three years 2020 - 2022\nbase &lt;- rep(base, 3)\n\n# Calculate percent change relative to death rate for 2019\nscot_dt[year %in% 2020:2022, \n                       xs_base := round((rate/base-1)*100, 3)]\n\nscot_dt[year %in% 2020:2023,] |&gt; \n    head() |&gt; \n    gt()\n\n\n\n\n\n\n  \n    \n    \n      year\n      age_cat\n      mort_count\n      pop_count\n      rate\n      xs_base\n    \n  \n  \n    2020\n0-14\n226\n859790\n26.285\n-5.582\n    2020\n15-24\n303\n623875\n48.567\n5.409\n    2020\n25-49\n3286\n1781229\n184.479\n3.170\n    2020\n50-59\n4387\n792457\n553.595\n11.649\n    2020\n60-69\n8167\n653002\n1250.685\n5.974\n    2020\n70-79\n15562\n484040\n3215.024\n10.274\n  \n  \n  \n\n\n\n\nVisualise\n\n\nCode\nscot_20_22 &lt;- scot_dt[year %in% 2020:2022,]\nscot_20_22[, year := as.factor(year)]\nggplot(data=scot_20_22, aes(x=age_cat, y=xs_base, \n                        fill= year)) +\n  geom_bar(stat=\"identity\", position=position_dodge())+\n  scale_fill_brewer(palette=\"Paired\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  labs(\n  title =\"Younger groups have reduced mortality\",\n  subtitle = waiver(),\n  caption = \"NRS census, popln estimates, and \\n Vital Events register\",\n  x = \"age category\",\n  y = \"death rate above baseline\") +\n    annotate(geom = \"text\", x = \"0-14\", y = 15, \n             label = \"Method 2A\") +\n  theme_minimal() +\n  theme(legend.position='top', \n        legend.justification='left',\n        legend.direction='horizontal') \n\n\n\n\n\nCode\n# ggsave(\"./figures/method2a-xs_base.jpeg\")"
  },
  {
    "objectID": "explore.html#method-2c-difference-from-linear-trend",
    "href": "explore.html#method-2c-difference-from-linear-trend",
    "title": "Exploratory Data Analysis",
    "section": "Method 2C: Difference from linear trend",
    "text": "Method 2C: Difference from linear trend\n\n\nLinear Fit of Death Rate for years 2010 to 2019\n\n\nCode\nscot_lin_fit &lt;- scot_dt[ year %in% c(2010:2019), ]\n\n# Visualize changes over time\ng0 &lt;- ggplot(scot_lin_fit[age_cat == \"0-14\", ], \n                aes(x = year, y = rate)) + \n  geom_point(size = 3, shape=10)+\n    geom_smooth(method = lm, se=FALSE) +\n    stat_regline_equation(label.x = 2016, label.y = 38, size = 5,\n        aes(label =  paste(after_stat(rr.label), sep = \"~~~~\"))) +\n  # x-axis breaks for year from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2019) +\n    ggtitle(\"0 to 14 years\")\n\ng15 &lt;- ggplot(scot_lin_fit[age_cat == \"15-24\", ], \n                aes(x = year, y = rate)) + \n  geom_point(size = 3, shape=10)+\n    geom_smooth(method = lm, se=FALSE) +\n    stat_regline_equation(label.x = 2016, label.y = 50, size = 5,\n        aes(label =  paste(after_stat(rr.label), sep = \"~~~~\"))) +\n  # x-axis breaks for year from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2019) +\n    ggtitle(\"15 to 24 years\")\n\ng25 &lt;- ggplot(scot_lin_fit[age_cat == \"25-49\", ], \n                aes(x = year, y = rate)) + \n  geom_point(size = 3, shape=10)+\n    geom_smooth(method = lm, se=FALSE) +\n    stat_regline_equation(label.x = 2016, label.y = 160, size = 5,\n        aes(label =  paste(after_stat(rr.label), sep = \"~~~~\"))) +\n  # x-axis breaks for year from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2019) +\n    ggtitle(\"25 to 49 years\")\n\ng50 &lt;- ggplot(scot_lin_fit[age_cat == \"50-59\", ], \n                aes(x = year, y = rate)) + \n  geom_point(size = 3, shape=10)+\n    geom_smooth(method = lm, se=FALSE) +\n    stat_regline_equation(label.x = 2016, label.y = 540, size = 5,\n        aes(label =  paste(after_stat(rr.label), sep = \"~~~~\"))) +\n  # x-axis breaks for year from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2019) +\n    ggtitle(\"50 to 59 years\")\n\ng60 &lt;- ggplot(scot_lin_fit[age_cat == \"60-69\", ], \n                aes(x = year, y = rate)) + \n  geom_point(size = 3, shape=10)+\n    geom_smooth(method = lm, se=FALSE) +\n    stat_regline_equation(label.x = 2016, label.y = 1300, size = 5,\n        aes(label =  paste(after_stat(rr.label), sep = \"~~~~\"))) +\n  # x-axis breaks for year from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2019) +\n    ggtitle(\"60 to 69 years\")\n\ng70 &lt;- ggplot(scot_lin_fit[age_cat == \"70-79\", ], \n                aes(x = year, y = rate)) + \n  geom_point(size = 3, shape=10)+\n    geom_smooth(method = lm, se=FALSE) +\n    stat_regline_equation(label.x = 2016, label.y = 3400, size = 5,\n        aes(label =  paste(after_stat(rr.label), sep = \"~~~~\"))) +\n  # x-axis breaks for year from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2019) +\n    ggtitle(\"70 to 79 years\")\n\ng80 &lt;- ggplot(scot_lin_fit[age_cat == \"80+\", ], \n                aes(x = year, y = rate)) + \n  geom_point(size = 3, shape=10)+\n    geom_smooth(method = lm, se=FALSE) +\n    stat_regline_equation(label.x = 2016, label.y = 11400, size = 5,\n        aes(label =  paste(after_stat(rr.label), sep = \"~~~~\"))) +\n  # x-axis breaks for year from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2019) +\n    ggtitle(\"80 years and over\")\n\n# Remove axis titles from all plots\ng_all &lt;- list(g0,g15, g25, g50, g60, g70, g80) %&gt;% \n    map(~.x + labs(x=NULL, y=NULL))\n\n\nPlot Function\n\n\nCode\n# plotmath expressions\nyleft &lt;- textGrob(expression(paste(\"deaths per 100,000\")), \n                  rot = 90, gp = gpar(fontsize = 20))\n\nbottom &lt;- textGrob(\"years\", gp = gpar(fontsize = 20))\n\n# Lay out plots\nuni &lt;- grid.arrange(grobs=g_all, ncol = 2, nrow = 4, \n                    left = yleft, bottom = bottom)\n\n\n\n\n\nCode\n#save - generates g object\n# g &lt;- arrangeGrob(g0,g15, g25, g50, g60, g70, g80, nrow=4) \n# #saves g\n# ggsave(file=\"./figures/linear_fit.jpeg\", g) \n\n\nOnly age categories 0-14 and 70-79 have adequate \\(r^2\\) value."
  },
  {
    "objectID": "inspect_vacc.html",
    "href": "inspect_vacc.html",
    "title": "Inspect Vaccinations Dataset",
    "section": "",
    "text": "Code\n# Five year age categories:\nage_5yr &lt;- c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \n                         \"25-29\", \"30-34\", \"35-39\", \"40-44\", \n                         \"45-49\", \"50-54\", \"55-59\", \"60-64\", \n                         \"65-69\", \"70-74\", \"75-79\",\n                         \"80-84\", \"85-89\", \"90 plus\")"
  },
  {
    "objectID": "inspect_vacc.html#daily-vaccinations-by-age-group-jan-2021---sept-2022",
    "href": "inspect_vacc.html#daily-vaccinations-by-age-group-jan-2021---sept-2022",
    "title": "Inspect Vaccinations Dataset",
    "section": "Daily Vaccinations by age group, Jan 2021 - Sept 2022",
    "text": "Daily Vaccinations by age group, Jan 2021 - Sept 2022\n\n\nInput daily vacc data and remove rows for Male and Female. Using total numbers only\ndaily_vacc &lt;- fread(\"./raw-data/daily_vacc_age_sex_sept_2022.csv\")\n\ndaily_vacc &lt;- daily_vacc[Sex == \"Total\",]\ncolnames(daily_vacc)\n\n\n [1] \"Date\"                         \"Country\"                     \n [3] \"Sex\"                          \"SexQF\"                       \n [5] \"AgeGroup\"                     \"AgeGroupQF\"                  \n [7] \"Population\"                   \"PopulationQF\"                \n [9] \"Dose\"                         \"DoseQF\"                      \n[11] \"NumberVaccinated\"             \"NumberVaccinatedQF\"          \n[13] \"PercentCoverage\"              \"PercentCoverageQF\"           \n[15] \"CumulativeNumberVaccinated\"   \"CumulativeNumberVaccinatedQF\"\n[17] \"CumulativePercentCoverage\"    \"CumulativePercentCoverageQF\" \n\n\nSelect relevant columns only\n\n\nCode\ndaily_vacc[, c(\"Sex\", \"SexQF\", \"AgeGroupQF\", \"Population\", \n               \"PopulationQF\", \"DoseQF\",\n               \"NumberVaccinatedQF\",\n               \"PercentCoverage\", \"PercentCoverageQF\", \n               \"CumulativeNumberVaccinated\",\n               \"CumulativeNumberVaccinatedQF\", \n               \"CumulativePercentCoverage\",\n               \"CumulativePercentCoverageQF\") := NULL]\nhead(daily_vacc) \n\n\n       Date   Country          AgeGroup   Dose NumberVaccinated\n1: 20201208 S92000003 12 years and over Dose 1             1907\n2: 20201208 S92000003 12 years and over Dose 2                0\n3: 20201208 S92000003 12 years and over Dose 3                0\n4: 20201208 S92000003 12 years and over Dose 4                0\n5: 20201208 S92000003 12 years and over Dose 5                0\n6: 20201208 S92000003          18 to 29 Dose 1              157\n\n\nRemove rows where no vaccination occurred.\n\n\nCode\ndaily_vacc &lt;- daily_vacc[NumberVaccinated != 0, ]\n\n\nRemove rows where no age group is given\n\n\nCode\ndaily_vacc &lt;- daily_vacc[!(AgeGroup == \"\"),]\n\n\n\nOverview\n\n\nCode\nhead(daily_vacc, 20) |&gt; gt()\n\n\n\n\n\n\n  \n    \n    \n      Date\n      Country\n      AgeGroup\n      Dose\n      NumberVaccinated\n    \n  \n  \n    20201208\nS92000003\n12 years and over\nDose 1\n1907\n    20201208\nS92000003\n18 to 29\nDose 1\n157\n    20201208\nS92000003\n18 years and over\nDose 1\n1907\n    20201208\nS92000003\n30 to 39\nDose 1\n368\n    20201208\nS92000003\n40 to 49\nDose 1\n497\n    20201208\nS92000003\n40 years and over\nDose 1\n1382\n    20201208\nS92000003\n50 to 54\nDose 1\n293\n    20201208\nS92000003\n55 to 59\nDose 1\n325\n    20201208\nS92000003\n60 to 64\nDose 1\n197\n    20201208\nS92000003\n65 to 69\nDose 1\n56\n    20201208\nS92000003\n70 to 74\nDose 1\n12\n    20201208\nS92000003\n75 to 79\nDose 1\n2\n    20201208\nS92000003\nAll vaccinations\nDose 1\n1907\n    20201208\nS92000003\nTotal\nDose 1\n2\n    20201209\nS92000003\n12 years and over\nDose 1\n3814\n    20201209\nS92000003\n18 to 29\nDose 1\n434\n    20201209\nS92000003\n18 years and over\nDose 1\n3814\n    20201209\nS92000003\n30 to 39\nDose 1\n736\n    20201209\nS92000003\n40 to 49\nDose 1\n928\n    20201209\nS92000003\n40 years and over\nDose 1\n2644\n  \n  \n  \n\n\n\n\nThe “Total” age group is misleading. The number receiving all doses is recorded in the “All vaccinations” category.\n\n\nCode\ndaily_vacc &lt;- daily_vacc[AgeGroup != \"Total\", ]\n\n\n\n\nAge groups\n\n\nCode\nn_age_groups &lt;- daily_vacc[, unique(AgeGroup)] |&gt; \n    length()\ndaily_vacc[, unique(AgeGroup)]\n\n\n [1] \"12 years and over\" \"18 to 29\"          \"18 years and over\"\n [4] \"30 to 39\"          \"40 to 49\"          \"40 years and over\"\n [7] \"50 to 54\"          \"55 to 59\"          \"60 to 64\"         \n[10] \"65 to 69\"          \"70 to 74\"          \"75 to 79\"         \n[13] \"All vaccinations\"  \"80 years and over\" \"16 to 17\"         \n[16] \"12 to 15\"          \"5 to 11\"          \n\n\n14 age categories in use by Humanity Projects:\n0-4 5-9 10-14 15-19 20-24 25-49 50-59 60-69 70-79 80+\n0-14 15-24 &lt;20 45-64\nOnly certain AgeGroups are compatible with Humanity Projects age categorisation:\n\"50 to 54\"  \"55 to 59\" \"60 to 64\" \"65 to 69\" \"70 to 74\" \"75 to 79\"   \n\"All vaccinations\"    \"80 years and over\"\nNumber of days when records were taken.\n\n\nCode\n(n_days &lt;- daily_vacc[unique(Date), .N])\n\n\n[1] 643\n\n\nCollapse Dose column so as to record NumberVaccinated for all doses given by age group and date. The number of observations should equal to the number of days times the number of age groups\n\n\nCode\ndaily_vacc_all_dose &lt;- daily_vacc[, .(Num_Vacc = sum(NumberVaccinated)),\n                                  by = .(Date, AgeGroup)]\nn_days * n_age_groups\n\n\n[1] 10931\n\n\nSince the number of observations (10,135) is less that the 10,931 then not every age group is recorded on each day.\nCheck whether the age groups above are recorded for each day in the data set\n\n\nCode\n# 636 days only\ndaily_vacc_all_dose[AgeGroup == \"50 to 54\", .N]\n\n# 636 days only\ndaily_vacc_all_dose[AgeGroup == \"55 to 59\", .N]\n\n# 631 days only\ndaily_vacc_all_dose[AgeGroup == \"60 to 64\", .N]\n\n# 613 days only\ndaily_vacc_all_dose[AgeGroup == \"70 to 74\", .N]\n\n# 611 days only\ndaily_vacc_all_dose[AgeGroup == \"75 to 79\", .N]\n\n# 614 days only\ndaily_vacc_all_dose[AgeGroup == \"80 years and over\", .N]\n\n# 634 days only\ndaily_vacc_all_dose[AgeGroup == \"Total\", .N]\n\n\n\n\nAggregate daily to weekly\n\n\nConvert column named ‘Date’ from integer to the class Date\nlibrary(lubridate)\n\ndaily_vacc_all_dose[, Date := ymd(Date)]\nhead(daily_vacc_all_dose)\n\n\n         Date          AgeGroup Num_Vacc\n1: 2020-12-08 12 years and over     1907\n2: 2020-12-08          18 to 29      157\n3: 2020-12-08 18 years and over     1907\n4: 2020-12-08          30 to 39      368\n5: 2020-12-08          40 to 49      497\n6: 2020-12-08 40 years and over     1382\n\n\nThe floor_date() function starts recording weeks in 2021 on 3 Jan. Remove observations prior to that date.\n\n\nCode\ndaily_vacc_all_dose &lt;- daily_vacc_all_dose[Date &gt;= ymd(20210103), ]\n\n\nAggregate numbers vaccinated for the first week by age group\n\n\nCode\nfirst_week &lt;- daily_vacc_all_dose[Date &lt; ymd(20210110), sum(Num_Vacc), by = AgeGroup]\nkable(first_week)\n\n\n\n\n\nAgeGroup\nV1\n\n\n\n\n12 years and over\n48729\n\n\n18 to 29\n4881\n\n\n18 years and over\n48722\n\n\n30 to 39\n7657\n\n\n40 to 49\n8951\n\n\n40 years and over\n36184\n\n\n50 to 54\n6054\n\n\n55 to 59\n6575\n\n\n60 to 64\n4988\n\n\n65 to 69\n2066\n\n\n70 to 74\n627\n\n\n75 to 79\n659\n\n\n80 years and over\n6264\n\n\nAll vaccinations\n48729\n\n\n16 to 17\n6\n\n\n12 to 15\n1\n\n\n\n\n\n\n\nThere is no record for the “5 to 11” group in the first week.\nAggregate for all weeks:\n\n\nCode\ndaily_vacc_all_dose$Week &lt;- floor_date(daily_vacc_all_dose$Date, \"week\")\n\n\nCheck the aggregated numbers for the first week\n\n\nCode\n(floor1 &lt;- daily_vacc_all_dose[Week == \"2021-01-03\", sum(Num_Vacc), by = AgeGroup] )\n\n\n             AgeGroup    V1\n 1: 12 years and over 48729\n 2:          18 to 29  4881\n 3: 18 years and over 48722\n 4:          30 to 39  7657\n 5:          40 to 49  8951\n 6: 40 years and over 36184\n 7:          50 to 54  6054\n 8:          55 to 59  6575\n 9:          60 to 64  4988\n10:          65 to 69  2066\n11:          70 to 74   627\n12:          75 to 79   659\n13: 80 years and over  6264\n14:  All vaccinations 48729\n15:          16 to 17     6\n16:          12 to 15     1\n\n\nCode\nfirst_week[, V1] == floor1[, V1]\n\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE\n\n\nAggregate numbers vaccinated for all weeks\n\n\nCode\nweekly_vacc &lt;- daily_vacc_all_dose[, sum(Num_Vacc), \n                                   by = .(Week, AgeGroup)]\n\n\n\n\nHumanity Projects Age Groups\nHP uses the 50-59 60-69 70-79 80+ and Total categories\nFilter age groups that correspond with Humanity Projects categorisation\n\n\nCode\nmatching_groups &lt;- c(\"50 to 54\", \"55 to 59\", \"60 to 64\",\"65 to 69\", \n                     \"70 to 74\", \"75 to 79\", \"All vaccinations\", \"80 years and over\")\n\nweekly_vacc &lt;- weekly_vacc[AgeGroup %in% matching_groups,]\n\n\nThe combineLevels() function from rockchalk puts factor levels together and creates a new factor variable. Author: Paul E. Johnson pauljohn@ku.edu\nUsage: combineLevels(fac, levs, newLabel = \"combinedLevels\")\n\n\nCode\nlibrary(rockchalk)\n\n\n\nAttaching package: 'rockchalk'\n\n\nThe following object is masked from 'package:Hmisc':\n\n    summarize\n\n\nThe following object is masked from 'package:dplyr':\n\n    summarize\n\n\nCode\nweekly_vacc[, AgeGroup := as.factor(AgeGroup)]\nlevels(weekly_vacc$AgeGroup)\n\n\n[1] \"50 to 54\"          \"55 to 59\"          \"60 to 64\"         \n[4] \"65 to 69\"          \"70 to 74\"          \"75 to 79\"         \n[7] \"80 years and over\" \"All vaccinations\" \n\n\nCode\nweekly_vacc$AgeGroup &lt;- combineLevels(weekly_vacc$AgeGroup, \n                                     levs = c(\"50 to 54\", \"55 to 59\"),\n              newLabel = \"Age50_59\")\n\n\nThe original levels 50 to 54 55 to 59 60 to 64 65 to 69 70 to 74 75 to 79 80 years and over All vaccinations \nhave been replaced by 60 to 64 65 to 69 70 to 74 75 to 79 80 years and over All vaccinations Age50_59 \n\n\nCode\nweekly_vacc$AgeGroup &lt;- combineLevels(weekly_vacc$AgeGroup, \n                                     levs = c(\"60 to 64\", \"65 to 69\"),\n              newLabel = \"Age60_69\")\n\n\nThe original levels 60 to 64 65 to 69 70 to 74 75 to 79 80 years and over All vaccinations Age50_59 \nhave been replaced by 70 to 74 75 to 79 80 years and over All vaccinations Age50_59 Age60_69 \n\n\nCode\nweekly_vacc$AgeGroup &lt;- combineLevels(weekly_vacc$AgeGroup, \n                                     levs = c(\"70 to 74\", \"75 to 79\"),\n              newLabel = \"Age70_79\")\n\n\nThe original levels 70 to 74 75 to 79 80 years and over All vaccinations Age50_59 Age60_69 \nhave been replaced by 80 years and over All vaccinations Age50_59 Age60_69 Age70_79 \n\n\nCode\n# Rename: change \"All vaccinations\" to \"All\"\nlevels(weekly_vacc$AgeGroup)[levels(weekly_vacc$AgeGroup)==\"All vaccinations\"] &lt;- \"All\"\n# Rename: change \"80 years and over\" to \"Age80+\"\nlevels(weekly_vacc$AgeGroup)[levels(weekly_vacc$AgeGroup)==\"80 years and over\"] &lt;- \"Age80+\"\n\n\nSum the combined levels by Date\n\n\nCode\nweekly_vacc[, Num_Vacc := V1][, V1 := NULL]\nweekly_vacc[, Num_Vacc := sum(Num_Vacc), by = .(AgeGroup, Week)]\n\n# Keep distinct rows only\nweekly_vacc &lt;- dplyr::distinct(weekly_vacc)\n\n\n\n\nYearly Totals\n2021\n\n\nCode\nweekly_vacc[Week &gt;= \"2021-01-03\" & \n                Week &lt;= \"2021-12-26\", sum(Num_Vacc), \n            by = AgeGroup]\n\n\n   AgeGroup       V1\n1: Age50_59  2097900\n2: Age60_69  1951541\n3: Age70_79  1457342\n4:   Age80+   785296\n5:      All 10992475\n\n\nOur World in Data gives the cumulative number of vaccinations for 2021 at 11.39 Million.\nOWD: Scotland Vaccinations\n2022\n\n\nCode\nweekly_vacc[Week &gt;= \"2022-01-02\" & \n                Week &lt;= \"2022-08-28\", sum(Num_Vacc), \n            by = AgeGroup]\n\n\n   AgeGroup      V1\n1: Age50_59   74122\n2: Age60_69   20339\n3:      All 1574738\n4: Age70_79    7493\n5:   Age80+    5952\n\n\n\n\nConstruct Excel Table\nHP records age categories as separate columns.\n\n\nCode\nweekly_excel &lt;- pivot_wider(weekly_vacc, names_from = AgeGroup,\n            values_from = Num_Vacc)\n\nwrite_xlsx(weekly_excel, path = \"./processed-data/all_doses_by_AG.xlsx\")"
  }
]