[
  {
    "objectID": "explore.html",
    "href": "explore.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Calculate mortality rates per 10,000 persons for each age category\n\n\n\nThe baseline level is the 2019 numbers for each age group.\n\n\nCode\nlibrary(purrr)\n\n\n\nAttaching package: 'purrr'\n\n\nThe following object is masked from 'package:data.table':\n\n    transpose\n\n\nCode\nbase &lt;- scot_dt[year==2019, rate]\n# y &lt;- 2019\n# adj_rate &lt;- scot_dt[year==eval(y), rate] - base\n\ncalc_adj_rate &lt;- function(yr){\n    scot_dt[year==eval(yr), rate] - base\n}\n\nadj &lt;- map(2010:2022, calc_adj_rate) |&gt; \n    unlist()\nscot_dt[, rate_adj := adj]\nscot_dt\n\n\n    year age_cat  mort     pop         rate     rate_adj\n 1: 2010       0   218   59335   36.7405410   4.24231363\n 2: 2010    1-14    90  796862    1.1294302   0.19683819\n 3: 2010   15-44  2229 2087635   10.6771538  -0.67648651\n 4: 2010   45-64  8368 1436146   58.2670564   2.80051629\n 5: 2010   65-74 10092  478080  211.0943775  27.67746587\n 6: 2010   75-84 16877  300237  562.1225898  55.12349312\n 7: 2010     85+ 16093  103905 1548.8186324  19.78733888\n 8: 2011       0   238   58715   40.5347867   8.03655931\n 9: 2011    1-14    90  795338    1.1315944   0.19900236\n10: 2011   15-44  2262 2096847   10.7876254  -0.56601490\n11: 2011   45-64  8076 1454169   55.5368736   0.07033352\n12: 2011   65-74 10019  481792  207.9528095  24.53589787\n13: 2011   75-84 16475  302639  544.3779553  37.37885855\n14: 2011     85+ 16501  105903 1558.1239436  29.09265009\n15: 2012       0   217   58547   37.0642390   4.56601162\n16: 2012    1-14    93  794418    1.1706683   0.23807633\n17: 2012   15-44  2071 2078002    9.9663042  -1.38733615\n18: 2012   45-64  7930 1456892   54.4309393  -1.03560083\n19: 2012   65-74 10135  507288  199.7878917  16.37098005\n20: 2012   75-84 16951  309226  548.1751211  41.17602441\n21: 2012     85+ 17540  109227 1605.8300603  76.79876681\n22: 2013       0   186   56999   32.6321514   0.13392407\n23: 2013    1-14    83  794873    1.0441920   0.11159996\n24: 2013   15-44  1990 2064946    9.6370559  -1.71658444\n25: 2013   45-64  7863 1463984   53.7096034  -1.75693674\n26: 2013   65-74 10222  522302  195.7105276  12.29361599\n27: 2013   75-84 16830  313868  536.2126754  29.21357869\n28: 2013     85+ 17526  110728 1582.7974857  53.76619221\n29: 2014       0   207   56183   36.8438852   4.34565779\n30: 2014    1-14    81  796294    1.0172122   0.08462023\n31: 2014   15-44  1904 2053897    9.2701825  -2.08345784\n32: 2014   45-64  7740 1472776   52.5538167  -2.91272338\n33: 2014   65-74 10029  535212  187.3836909   3.96677931\n34: 2014   75-84 16698  318857  523.6830303  16.68393362\n35: 2014     85+ 17580  114381 1536.9685525   7.93725895\n36: 2015       0   175   56001   31.2494420  -1.24878540\n37: 2015    1-14    70  799671    0.8753600  -0.05723201\n38: 2015   15-44  1976 2053401    9.6230595  -1.73058083\n39: 2015   45-64  7976 1480929   53.8580850  -1.60845509\n40: 2015   65-74 10791  545281  197.8979645  14.48105290\n41: 2015   75-84 17273  321910  536.5785468  29.57945010\n42: 2015     85+ 19318  115807 1668.1202345 139.08894100\n43: 2016       0   181   55516   32.6032135   0.10498612\n44: 2016    1-14    97  804962    1.2050258   0.27243382\n45: 2016   15-44  2194 2054055   10.6813109  -0.67232945\n46: 2016   45-64  8256 1491315   55.3605375  -0.10600261\n47: 2016   65-74 10585  556543  190.1919528   6.77504119\n48: 2016   75-84 16812  323264  520.0702831  13.07118641\n49: 2016     85+ 18603  119045 1562.6863791  33.65508558\n50: 2017       0   176   53553   32.8646388   0.36641140\n51: 2017    1-14    81  810601    0.9992586   0.06666657\n52: 2017   15-44  2068 2048063   10.0973456  -1.25629469\n53: 2017   45-64  8138 1500016   54.2527546  -1.21378548\n54: 2017   65-74 10529  564596  186.4873290   3.07041736\n55: 2017   75-84 17373  326155  532.6608514  25.66175474\n56: 2017     85+ 19518  121816 1602.2525777  73.22128413\n57: 2018       0   163   52310   31.1603900  -1.33783739\n58: 2018    1-14    83  813431    1.0203693   0.08777727\n59: 2018   15-44  2220 2044305   10.8594363  -0.49420399\n60: 2018   45-64  8376 1501940   55.7678736   0.30133343\n61: 2018   65-74 10759  571378  188.2991645   4.88225284\n62: 2018   75-84 17511  331360  528.4584742  21.45937747\n63: 2018     85+ 19391  123376 1571.6995202  42.66822664\n64: 2019       0   165   50772   32.4982274   0.00000000\n65: 2019    1-14    76  814933    0.9325920   0.00000000\n66: 2019   15-44  2331 2053086   11.3536403   0.00000000\n67: 2019   45-64  8322 1500364   55.4665401   0.00000000\n68: 2019   65-74 10607  578300  183.4169116   0.00000000\n69: 2019   75-84 17175  338758  506.9990967   0.00000000\n70: 2019     85+ 19432  127087 1529.0312935   0.00000000\n71: 2020       0   146   48635   30.0195333  -2.47869411\n72: 2020    1-14    80  811155    0.9862480   0.05365600\n73: 2020   15-44  2349 2055180   11.4296558   0.07601547\n74: 2020   45-64  9119 1494950   60.9986956   5.53215549\n75: 2020   65-74 11676  586263  199.1597628  15.74285113\n76: 2020   75-84 19072  341506  558.4674940  51.46839728\n77: 2020     85+ 21651  128311 1687.3845578 158.35326431\n78: 2021       0   186   46782   39.7588816   7.26065425\n79: 2021    1-14    72  806948    0.8922508  -0.04034120\n80: 2021   15-44  2322 2062184   11.2599070  -0.09373335\n81: 2021   45-64  9565 1490125   64.1892459   8.72270575\n82: 2021   65-74 11915  595578  200.0577590  16.64084738\n83: 2021   75-84 18785  346974  541.3950325  34.39593578\n84: 2021     85+ 20742  131309 1579.6327746  50.60148108\n85: 2022       0   165   49420   33.3872926   0.88906522\n86: 2022    1-14    69  782780    0.8814737  -0.05111828\n87: 2022   15-44  2061 2011600   10.2455757  -1.10806466\n88: 2022   45-64  8994 1501700   59.8921223   4.42558214\n89: 2022   65-74 11551  600100  192.4845859   9.06767426\n90: 2022   75-84 18789  360600  521.0482529  14.04915621\n91: 2022     85+ 21312  130400 1634.3558282 105.32453470\n    year age_cat  mort     pop         rate     rate_adj"
  },
  {
    "objectID": "explore.html#mortality-rates",
    "href": "explore.html#mortality-rates",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Calculate mortality rates per 10,000 persons for each age category\n\n\n\nThe baseline level is the 2019 numbers for each age group.\n\n\nCode\nlibrary(purrr)\n\n\n\nAttaching package: 'purrr'\n\n\nThe following object is masked from 'package:data.table':\n\n    transpose\n\n\nCode\nbase &lt;- scot_dt[year==2019, rate]\n# y &lt;- 2019\n# adj_rate &lt;- scot_dt[year==eval(y), rate] - base\n\ncalc_adj_rate &lt;- function(yr){\n    scot_dt[year==eval(yr), rate] - base\n}\n\nadj &lt;- map(2010:2022, calc_adj_rate) |&gt; \n    unlist()\nscot_dt[, rate_adj := adj]\nscot_dt\n\n\n    year age_cat  mort     pop         rate     rate_adj\n 1: 2010       0   218   59335   36.7405410   4.24231363\n 2: 2010    1-14    90  796862    1.1294302   0.19683819\n 3: 2010   15-44  2229 2087635   10.6771538  -0.67648651\n 4: 2010   45-64  8368 1436146   58.2670564   2.80051629\n 5: 2010   65-74 10092  478080  211.0943775  27.67746587\n 6: 2010   75-84 16877  300237  562.1225898  55.12349312\n 7: 2010     85+ 16093  103905 1548.8186324  19.78733888\n 8: 2011       0   238   58715   40.5347867   8.03655931\n 9: 2011    1-14    90  795338    1.1315944   0.19900236\n10: 2011   15-44  2262 2096847   10.7876254  -0.56601490\n11: 2011   45-64  8076 1454169   55.5368736   0.07033352\n12: 2011   65-74 10019  481792  207.9528095  24.53589787\n13: 2011   75-84 16475  302639  544.3779553  37.37885855\n14: 2011     85+ 16501  105903 1558.1239436  29.09265009\n15: 2012       0   217   58547   37.0642390   4.56601162\n16: 2012    1-14    93  794418    1.1706683   0.23807633\n17: 2012   15-44  2071 2078002    9.9663042  -1.38733615\n18: 2012   45-64  7930 1456892   54.4309393  -1.03560083\n19: 2012   65-74 10135  507288  199.7878917  16.37098005\n20: 2012   75-84 16951  309226  548.1751211  41.17602441\n21: 2012     85+ 17540  109227 1605.8300603  76.79876681\n22: 2013       0   186   56999   32.6321514   0.13392407\n23: 2013    1-14    83  794873    1.0441920   0.11159996\n24: 2013   15-44  1990 2064946    9.6370559  -1.71658444\n25: 2013   45-64  7863 1463984   53.7096034  -1.75693674\n26: 2013   65-74 10222  522302  195.7105276  12.29361599\n27: 2013   75-84 16830  313868  536.2126754  29.21357869\n28: 2013     85+ 17526  110728 1582.7974857  53.76619221\n29: 2014       0   207   56183   36.8438852   4.34565779\n30: 2014    1-14    81  796294    1.0172122   0.08462023\n31: 2014   15-44  1904 2053897    9.2701825  -2.08345784\n32: 2014   45-64  7740 1472776   52.5538167  -2.91272338\n33: 2014   65-74 10029  535212  187.3836909   3.96677931\n34: 2014   75-84 16698  318857  523.6830303  16.68393362\n35: 2014     85+ 17580  114381 1536.9685525   7.93725895\n36: 2015       0   175   56001   31.2494420  -1.24878540\n37: 2015    1-14    70  799671    0.8753600  -0.05723201\n38: 2015   15-44  1976 2053401    9.6230595  -1.73058083\n39: 2015   45-64  7976 1480929   53.8580850  -1.60845509\n40: 2015   65-74 10791  545281  197.8979645  14.48105290\n41: 2015   75-84 17273  321910  536.5785468  29.57945010\n42: 2015     85+ 19318  115807 1668.1202345 139.08894100\n43: 2016       0   181   55516   32.6032135   0.10498612\n44: 2016    1-14    97  804962    1.2050258   0.27243382\n45: 2016   15-44  2194 2054055   10.6813109  -0.67232945\n46: 2016   45-64  8256 1491315   55.3605375  -0.10600261\n47: 2016   65-74 10585  556543  190.1919528   6.77504119\n48: 2016   75-84 16812  323264  520.0702831  13.07118641\n49: 2016     85+ 18603  119045 1562.6863791  33.65508558\n50: 2017       0   176   53553   32.8646388   0.36641140\n51: 2017    1-14    81  810601    0.9992586   0.06666657\n52: 2017   15-44  2068 2048063   10.0973456  -1.25629469\n53: 2017   45-64  8138 1500016   54.2527546  -1.21378548\n54: 2017   65-74 10529  564596  186.4873290   3.07041736\n55: 2017   75-84 17373  326155  532.6608514  25.66175474\n56: 2017     85+ 19518  121816 1602.2525777  73.22128413\n57: 2018       0   163   52310   31.1603900  -1.33783739\n58: 2018    1-14    83  813431    1.0203693   0.08777727\n59: 2018   15-44  2220 2044305   10.8594363  -0.49420399\n60: 2018   45-64  8376 1501940   55.7678736   0.30133343\n61: 2018   65-74 10759  571378  188.2991645   4.88225284\n62: 2018   75-84 17511  331360  528.4584742  21.45937747\n63: 2018     85+ 19391  123376 1571.6995202  42.66822664\n64: 2019       0   165   50772   32.4982274   0.00000000\n65: 2019    1-14    76  814933    0.9325920   0.00000000\n66: 2019   15-44  2331 2053086   11.3536403   0.00000000\n67: 2019   45-64  8322 1500364   55.4665401   0.00000000\n68: 2019   65-74 10607  578300  183.4169116   0.00000000\n69: 2019   75-84 17175  338758  506.9990967   0.00000000\n70: 2019     85+ 19432  127087 1529.0312935   0.00000000\n71: 2020       0   146   48635   30.0195333  -2.47869411\n72: 2020    1-14    80  811155    0.9862480   0.05365600\n73: 2020   15-44  2349 2055180   11.4296558   0.07601547\n74: 2020   45-64  9119 1494950   60.9986956   5.53215549\n75: 2020   65-74 11676  586263  199.1597628  15.74285113\n76: 2020   75-84 19072  341506  558.4674940  51.46839728\n77: 2020     85+ 21651  128311 1687.3845578 158.35326431\n78: 2021       0   186   46782   39.7588816   7.26065425\n79: 2021    1-14    72  806948    0.8922508  -0.04034120\n80: 2021   15-44  2322 2062184   11.2599070  -0.09373335\n81: 2021   45-64  9565 1490125   64.1892459   8.72270575\n82: 2021   65-74 11915  595578  200.0577590  16.64084738\n83: 2021   75-84 18785  346974  541.3950325  34.39593578\n84: 2021     85+ 20742  131309 1579.6327746  50.60148108\n85: 2022       0   165   49420   33.3872926   0.88906522\n86: 2022    1-14    69  782780    0.8814737  -0.05111828\n87: 2022   15-44  2061 2011600   10.2455757  -1.10806466\n88: 2022   45-64  8994 1501700   59.8921223   4.42558214\n89: 2022   65-74 11551  600100  192.4845859   9.06767426\n90: 2022   75-84 18789  360600  521.0482529  14.04915621\n91: 2022     85+ 21312  130400 1634.3558282 105.32453470\n    year age_cat  mort     pop         rate     rate_adj"
  },
  {
    "objectID": "explore.html#trend-lines",
    "href": "explore.html#trend-lines",
    "title": "Exploratory Data Analysis",
    "section": "Trend Lines",
    "text": "Trend Lines\n\nOlder\n\n\nCode\nolder &lt;- scot_dt[age_cat  %in% c(\"65-74\", \"75-84\", \"85+\")]\n\n# Visualize changes over time\nggplot(older, aes(x = year, y = rate_adj)) +\n  geom_line(aes(group = age_cat), color = \"grey50\") +\n  geom_point(aes(color = age_cat, shape = age_cat)) +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \n\n\n\n\n\n\n\nMiddle Ages\n\n\nCode\nworking &lt;- scot_dt[age_cat %in% c(\"15-44\", \"45-64\"), ]\nggplot(working, aes(x = year, y = rate_adj)) +\n  geom_line(aes(group = age_cat), color = \"grey50\") +\n  geom_point(aes(color = age_cat, shape = age_cat)) +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022) \n\n\n\n\n\n\n\nYoung\n\n\nCode\nyoung &lt;- scot_dt[age_cat %in% c(\"0\", \"1-14\")]\n\nggplot(young, aes(x = year, y = rate_adj)) +\n  geom_line(aes(group = age_cat), color = \"grey50\") +\n  geom_point(aes(color = age_cat, shape = age_cat)) +\n  # x-axis breaks for years from 2010 to 2022\n  scale_x_continuous(breaks = 2010:2022)"
  },
  {
    "objectID": "data-sources.html",
    "href": "data-sources.html",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census\nScotland’s Census, 2022\nScotland’s Census, 2011\nNational Records of Scotland:\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision\n\n\n\nNational Records of Scotland, Vital Events 2022\nSection 5 contains mortality by age\nVital Events Reference Tables 2021\nVital Events Archive - Historical data back to 2001"
  },
  {
    "objectID": "data-sources.html#census-and-statistics-service-of-scotland",
    "href": "data-sources.html#census-and-statistics-service-of-scotland",
    "title": "Data Sources",
    "section": "",
    "text": "Scotland’s Census\nScotland’s Census, 2022\nScotland’s Census, 2011\nNational Records of Scotland:\nMid-Year Population Estimates 2021, 2020\nMid-Year Population Estimates, Archive 2019-2012\nMid-2002 to Mid-2010 Revision\n\n\n\nNational Records of Scotland, Vital Events 2022\nSection 5 contains mortality by age\nVital Events Reference Tables 2021\nVital Events Archive - Historical data back to 2001"
  },
  {
    "objectID": "getting-cleaning-data.html",
    "href": "getting-cleaning-data.html",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Code\nsource(\"./code/get-census-11.R\")   \n# Population counts for each year of age\npop11_1yr &lt;- get_census_11(is_plot = 0)  \n\n# Section age variable into the 7 HP age categories\npop11 &lt;- make_groups(pop11_1yr, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(pop11_1yr, get_census_11)\n\n\n\n\n\n\n\n\n\n\nSimilar to Census 2011, population numbers are for each year of age\nsource(\"./code/get-pop-by-year.R\")\nfile_21 &lt;- \"./data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"F4:CR5\"\n\npop21 &lt;- get_pop_by_year(file_21, sheet_21, range_21)\n\npop21 &lt;- make_groups(pop21, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_21, range_21, sheet_21)\n\n\n\n\n\n\n\nCode\nsource(\"./code/get-pop.R\")\n\nfile_20 &lt;- \"./data/mid-year-pop-est-20-data.xlsx\"\nsheet_20 &lt;- \"Table 1\"\nrange_20 &lt;- \"F4:CR5\"\n\npop20 &lt;- get_pop(file_20, is_16 = 0)\npop20[, age := group_5yr][, age_cat := NULL]\n\npop20 &lt;- make_groups(pop20, is_pop = 1, cat_19 = FALSE)\nrm(file_20, range_20, sheet_20)\n\n\n\n\n\n\n\n\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n\nCode\nfile_19 &lt;- \"./data/mid-year-pop-est-19-data.xlsx\"  \n\npop19 &lt;- get_pop(file_19, is_16 = 0) \npop19[, age := group_5yr][, age_cat := NULL]\n\npop19 &lt;- make_groups(pop19, is_pop = 1, cat_19 = FALSE)\nrm(file_19)\n\n\n\n\n\n\n\nCode\nfile_18 &lt;- \"./data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18 &lt;- get_pop(file_18, is_16 = 0) \npop18[, age := group_5yr][, age_cat := NULL]\n\npop18 &lt;- make_groups(pop18, is_pop = 1, cat_19 = FALSE)\nrm(file_18)\n\n\n\n\n\n\n\nCode\nfile_17 &lt;- \"./data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17 &lt;- get_pop(file_17, is_16 = 0) \npop17[, age := group_5yr][, age_cat := NULL]\n\npop17 &lt;- make_groups(pop17, is_pop = 1, cat_19 = FALSE)\nrm(file_17)\n\n\n\n\n\n\n\nCode\nsource(\"./code/get-pop.R\")\nfile_16 &lt;- \"./data/16-mid-year-pe-tab1.xlsx\" \n\npop16 &lt;- get_pop(file_16, is_16 = 1)\npop16[, age := group_5yr][, age_cat := NULL]\n\npop16 &lt;- make_groups(pop16, is_pop = 1, cat_19 = FALSE)\nrm(file_16)\n\n\n\n\n\n\n\nCode\nfile_15 &lt;- \"./data/15mype-cahb-tab1.xlsx\" \n\npop15 &lt;- get_pop(file_15, is_16 = 0) \npop15[, age := group_5yr][, age_cat := NULL]\n\npop15 &lt;- make_groups(pop15, is_pop = 1, cat_19 = FALSE)\nrm(file_15)\n\n\n\n\n\n\n\nCode\nfile_14 &lt;- \"./data/14mype-cahb-all-tab.xlsx\"  \n\npop14 &lt;- get_pop(file_14, is_16 = 0) \npop14[, age := group_5yr][, age_cat := NULL]\n\npop14 &lt;- make_groups(pop14, is_pop = 1, cat_19 = FALSE)\nrm(file_14)\n\n\n\n\n\n\n\nCode\nfile_13 &lt;- \"./data/13mype-cahb-tab1.xlsx\"  \n\npop13 &lt;- get_pop(file_13, is_16 = 0) \npop13[, age := group_5yr][, age_cat := NULL]\n\npop13 &lt;- make_groups(pop13, is_pop = 1, cat_19 = FALSE)\nrm(file_13)\n\n\n\n\n\n\n\nCode\nfile_12 &lt;- \"./data/12mype-cahb-tab1.xlsx\"  \n\npop12 &lt;- get_pop(file_12, is_16 = 0) \npop12[, age := group_5yr][, age_cat := NULL]\n\npop12 &lt;- make_groups(pop12, is_pop = 1, cat_19 = FALSE)\nrm(file_12)\n\n\n\n\n\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nsource(\"./code/get-pop-by-year.R\")\n\nfile_10 &lt;- \"./data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"C4:CO5\"\n\npop10 &lt;- get_pop_by_year(file_10, sheet_10, range_10)\n\npop10 &lt;- make_groups(pop10, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_10, range_10, sheet_10)\n\n\n\n\nCode\n# pop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# \n# pop_dt &lt;- rbind(pop10, pop11, pop12, pop13, pop14, pop15,\n#                  pop16, pop17, pop18, pop19, pop20, pop21, \n#                  pop22)\n# \n# saveRDS(pop_dt, file = \"./data-clean/scot-pop.rds\")\n# \n# # Cleanup the environment\n# # keep 'group5yr' vector containing age categories\n# remove(list = pop_all)\nrm(get_pop, get_pop_by_year)"
  },
  {
    "objectID": "getting-cleaning-data.html#scotlands-census",
    "href": "getting-cleaning-data.html#scotlands-census",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Code\nsource(\"./code/get-census-11.R\")   \n# Population counts for each year of age\npop11_1yr &lt;- get_census_11(is_plot = 0)  \n\n# Section age variable into the 7 HP age categories\npop11 &lt;- make_groups(pop11_1yr, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(pop11_1yr, get_census_11)"
  },
  {
    "objectID": "getting-cleaning-data.html#nrs-mid-year-population-estimates",
    "href": "getting-cleaning-data.html#nrs-mid-year-population-estimates",
    "title": "Getting and Cleaning Data",
    "section": "",
    "text": "Similar to Census 2011, population numbers are for each year of age\nsource(\"./code/get-pop-by-year.R\")\nfile_21 &lt;- \"./data/mid-year-pop-est-21-data.xlsx\"\nsheet_21 &lt;- \"Table 1\"\nrange_21 &lt;- \"F4:CR5\"\n\npop21 &lt;- get_pop_by_year(file_21, sheet_21, range_21)\n\npop21 &lt;- make_groups(pop21, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_21, range_21, sheet_21)\n\n\n\n\n\n\n\nCode\nsource(\"./code/get-pop.R\")\n\nfile_20 &lt;- \"./data/mid-year-pop-est-20-data.xlsx\"\nsheet_20 &lt;- \"Table 1\"\nrange_20 &lt;- \"F4:CR5\"\n\npop20 &lt;- get_pop(file_20, is_16 = 0)\npop20[, age := group_5yr][, age_cat := NULL]\n\npop20 &lt;- make_groups(pop20, is_pop = 1, cat_19 = FALSE)\nrm(file_20, range_20, sheet_20)\n\n\n\n\n\n\n\n\nIn the source data, year of age and population numbers are stored in multiple columns:\n\n\n\nCode\nfile_19 &lt;- \"./data/mid-year-pop-est-19-data.xlsx\"  \n\npop19 &lt;- get_pop(file_19, is_16 = 0) \npop19[, age := group_5yr][, age_cat := NULL]\n\npop19 &lt;- make_groups(pop19, is_pop = 1, cat_19 = FALSE)\nrm(file_19)\n\n\n\n\n\n\n\nCode\nfile_18 &lt;- \"./data/mid-year-pop-est-18-tabs.xlsx\" \n\npop18 &lt;- get_pop(file_18, is_16 = 0) \npop18[, age := group_5yr][, age_cat := NULL]\n\npop18 &lt;- make_groups(pop18, is_pop = 1, cat_19 = FALSE)\nrm(file_18)\n\n\n\n\n\n\n\nCode\nfile_17 &lt;- \"./data/mid-year-pop-est-17-all-tables-revised.xlsx\" \n\npop17 &lt;- get_pop(file_17, is_16 = 0) \npop17[, age := group_5yr][, age_cat := NULL]\n\npop17 &lt;- make_groups(pop17, is_pop = 1, cat_19 = FALSE)\nrm(file_17)\n\n\n\n\n\n\n\nCode\nsource(\"./code/get-pop.R\")\nfile_16 &lt;- \"./data/16-mid-year-pe-tab1.xlsx\" \n\npop16 &lt;- get_pop(file_16, is_16 = 1)\npop16[, age := group_5yr][, age_cat := NULL]\n\npop16 &lt;- make_groups(pop16, is_pop = 1, cat_19 = FALSE)\nrm(file_16)\n\n\n\n\n\n\n\nCode\nfile_15 &lt;- \"./data/15mype-cahb-tab1.xlsx\" \n\npop15 &lt;- get_pop(file_15, is_16 = 0) \npop15[, age := group_5yr][, age_cat := NULL]\n\npop15 &lt;- make_groups(pop15, is_pop = 1, cat_19 = FALSE)\nrm(file_15)\n\n\n\n\n\n\n\nCode\nfile_14 &lt;- \"./data/14mype-cahb-all-tab.xlsx\"  \n\npop14 &lt;- get_pop(file_14, is_16 = 0) \npop14[, age := group_5yr][, age_cat := NULL]\n\npop14 &lt;- make_groups(pop14, is_pop = 1, cat_19 = FALSE)\nrm(file_14)\n\n\n\n\n\n\n\nCode\nfile_13 &lt;- \"./data/13mype-cahb-tab1.xlsx\"  \n\npop13 &lt;- get_pop(file_13, is_16 = 0) \npop13[, age := group_5yr][, age_cat := NULL]\n\npop13 &lt;- make_groups(pop13, is_pop = 1, cat_19 = FALSE)\nrm(file_13)\n\n\n\n\n\n\n\nCode\nfile_12 &lt;- \"./data/12mype-cahb-tab1.xlsx\"  \n\npop12 &lt;- get_pop(file_12, is_16 = 0) \npop12[, age := group_5yr][, age_cat := NULL]\n\npop12 &lt;- make_groups(pop12, is_pop = 1, cat_19 = FALSE)\nrm(file_12)\n\n\n\n\n\nMid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011\n\n\nconvert single year population numbers to age categories\nsource(\"./code/get-pop-by-year.R\")\n\nfile_10 &lt;- \"./data/council-rebased-02-11-sya.xls\" \nsheet_10 &lt;- \"2010\"\nrange_10 &lt;- \"C4:CO5\"\n\npop10 &lt;- get_pop_by_year(file_10, sheet_10, range_10)\n\npop10 &lt;- make_groups(pop10, is_pop = 1, cat_19 = FALSE)\n\n# cleanup\nrm(file_10, range_10, sheet_10)\n\n\n\n\nCode\n# pop_all &lt;- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]\n# \n# pop_dt &lt;- rbind(pop10, pop11, pop12, pop13, pop14, pop15,\n#                  pop16, pop17, pop18, pop19, pop20, pop21, \n#                  pop22)\n# \n# saveRDS(pop_dt, file = \"./data-clean/scot-pop.rds\")\n# \n# # Cleanup the environment\n# # keep 'group5yr' vector containing age categories\n# remove(list = pop_all)\nrm(get_pop, get_pop_by_year)"
  }
]