---
title: "Getting and Cleaning Data"
author: "JJC"
format:
    html:
        toc: true
        toc-depth: 2
        toc-title: Table of contents
        # number-sections: true
        code-fold: true
        highlight-style: github
editor: visual
---

```{r}
#| include: false
#| label: load_libraries

library(data.table)
library(janitor)    # clean_names
library(readxl)     # read_excel
library(tidyr)      # pivot functions
library(kableExtra) # kable
library(gt)
library(purrr)      # map
library(Hmisc)      # grouping function "cut2"
library(ggplot2)
library(assertr)    # verify function
library(docstring)  # function specification
```

# Population

## Scotland's Census

### **2022**

```{r}
#| code-summary: "Import excel sheet giving numbers of persons by 5-year age groups for year 2022" 
#| echo: false

source("./code/get-census-22.R")
source("./code/make-groups.R")

census22 <- get_census_22(is_plot=0)
# Population counts are in 5-year age groups
pop22_5yr <- census22[[1]]
newborn22 <- census22[[2]]

# age = 0 represents 0-4 year old group
# separate out a new group for newborns
# age = 0: newborns
# age = 1: 1-4 year old group
# Create new entry for age = 0
pop0 <- data.table(age = 0, pop = newborn22)
# Substract number of newborns from the 0 category
# and convert this to the 1 category
pop22_5yr[age == 0, `:=` (pop = pop - newborn22,
                              age = 1)]
pop22_5yr <- rbind(pop0, pop22_5yr)

# Record age groupings for year 0 and for
# 5-year categories after that
group_5yr <- pop22_5yr[, age]

# Convert age categories to HP grouping
pop22 <- make_groups(pop22_5yr, is_pop = 1, cat_19 = FALSE)

# cleanup
rm(census22, pop0, pop22_5yr, newborn22, get_census_22)
```

### **2011**

```{r}
#| message: false    

source("./code/get-census-11.R")   
# Population counts for each year of age
pop11_1yr <- get_census_11(is_plot = 0)  

# Section age variable into the 7 HP age categories
pop11 <- make_groups(pop11_1yr, is_pop = 1, cat_19 = FALSE)

# cleanup
rm(pop11_1yr, get_census_11)
```

## NRS Mid-Year Population Estimates

### 2021

```{r}
#| code-summary: "Similar to Census 2011, population numbers are for each year of age"

source("./code/get-pop-by-year.R")
file_21 <- "./data/mid-year-pop-est-21-data.xlsx"
sheet_21 <- "Table 1"
range_21 <- "F4:CR5"

pop21 <- get_pop_by_year(file_21, sheet_21, range_21)

pop21 <- make_groups(pop21, is_pop = 1, cat_19 = FALSE)

# cleanup
rm(file_21, range_21, sheet_21)
```

### 2020

```{r}
#| message: false

source("./code/get-pop.R")

file_20 <- "./data/mid-year-pop-est-20-data.xlsx"
sheet_20 <- "Table 1"
range_20 <- "F4:CR5"

pop20 <- get_pop(file_20, is_16 = 0)
pop20[, age := group_5yr][, age_cat := NULL]

pop20 <- make_groups(pop20, is_pop = 1, cat_19 = FALSE)
rm(file_20, range_20, sheet_20)
```

### NRS Mid-Year Population Estimates - Archive

### 2019

In the source data, year of age and population numbers are stored in multiple columns:

![](images/NRS-2019-pop-by-age.png)

```{r}
#| message: false  

file_19 <- "./data/mid-year-pop-est-19-data.xlsx"  

pop19 <- get_pop(file_19, is_16 = 0) 
pop19[, age := group_5yr][, age_cat := NULL]

pop19 <- make_groups(pop19, is_pop = 1, cat_19 = FALSE)
rm(file_19)
```

### 2018

```{r}
#| message: false

file_18 <- "./data/mid-year-pop-est-18-tabs.xlsx" 

pop18 <- get_pop(file_18, is_16 = 0) 
pop18[, age := group_5yr][, age_cat := NULL]

pop18 <- make_groups(pop18, is_pop = 1, cat_19 = FALSE)
rm(file_18)
```

### 2017

```{r}
#| message: false

file_17 <- "./data/mid-year-pop-est-17-all-tables-revised.xlsx" 

pop17 <- get_pop(file_17, is_16 = 0) 
pop17[, age := group_5yr][, age_cat := NULL]

pop17 <- make_groups(pop17, is_pop = 1, cat_19 = FALSE)
rm(file_17)
```

### 2016

```{r}
#| message: false

source("./code/get-pop.R")
file_16 <- "./data/16-mid-year-pe-tab1.xlsx" 

pop16 <- get_pop(file_16, is_16 = 1)
pop16[, age := group_5yr][, age_cat := NULL]

pop16 <- make_groups(pop16, is_pop = 1, cat_19 = FALSE)
rm(file_16)
```

### 2015

```{r}
#| message: false

file_15 <- "./data/15mype-cahb-tab1.xlsx" 

pop15 <- get_pop(file_15, is_16 = 0) 
pop15[, age := group_5yr][, age_cat := NULL]

pop15 <- make_groups(pop15, is_pop = 1, cat_19 = FALSE)
rm(file_15)
```

### 2014

```{r}
#| message: false

file_14 <- "./data/14mype-cahb-all-tab.xlsx"  

pop14 <- get_pop(file_14, is_16 = 0) 
pop14[, age := group_5yr][, age_cat := NULL]

pop14 <- make_groups(pop14, is_pop = 1, cat_19 = FALSE)
rm(file_14)
```

### 2013

```{r}
#| message: false

file_13 <- "./data/13mype-cahb-tab1.xlsx"  

pop13 <- get_pop(file_13, is_16 = 0) 
pop13[, age := group_5yr][, age_cat := NULL]

pop13 <- make_groups(pop13, is_pop = 1, cat_19 = FALSE)
rm(file_13)
```

### 2012

```{r}
#| message: false

file_12 <- "./data/12mype-cahb-tab1.xlsx"  

pop12 <- get_pop(file_12, is_16 = 0) 
pop12[, age := group_5yr][, age_cat := NULL]

pop12 <- make_groups(pop12, is_pop = 1, cat_19 = FALSE)
rm(file_12)
```

### 2010

Mid-year population estimates, Scotland and its Council areas by single year of age and sex: 2002 to 2011

```{r}
#| message: false
#| code-line-numbers: false
#| code-summary: "convert single year population numbers to age categories"

source("./code/get-pop-by-year.R")

file_10 <- "./data/council-rebased-02-11-sya.xls" 
sheet_10 <- "2010"
range_10 <- "C4:CO5"

pop10 <- get_pop_by_year(file_10, sheet_10, range_10)

pop10 <- make_groups(pop10, is_pop = 1, cat_19 = FALSE)

# cleanup
rm(file_10, range_10, sheet_10)
```

```{r}

# pop_all <- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]
# 
# pop_dt <- rbind(pop10, pop11, pop12, pop13, pop14, pop15,
#                  pop16, pop17, pop18, pop19, pop20, pop21, 
#                  pop22)
# 
# saveRDS(pop_dt, file = "./data-clean/scot-pop.rds")
# 
# # Cleanup the environment
# # keep 'group5yr' vector containing age categories
# remove(list = pop_all)
rm(get_pop, get_pop_by_year, total)
```

# Mortality

Table 5.02 contains deaths, by sex, age, and administrative area, Scotland

```{r}
#| include: false

source("./code/get-mort-year.R")
```

### 2022

```{r}
#| message: false

file_year <- "./data/vital-events-22-ref-tabs-5.xlsx"
mort22 <- get_mort_year(file_year, group_5yr)

mort22 <- make_groups(mort22, is_pop = 0, cat_19 = FALSE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, sheet = 4,
                    range = "C6:C6", col_names = FALSE)[[1]]
verify(mort22, sum(mort) == total)
mort22[, year := 2022]
setcolorder(mort22, c("year", "age_cat", "mort"))
```

Calculate mortality rate by age category

```{r}
scot22 <- merge(mort22, pop22, by="age_cat" )
```

### 2021

```{r}
#| message: false

file_year <- "./data/vital-events-21-ref-tabs-5.xlsx"
mort21 <- get_mort_year(file_year, group_5yr)
mort21 <- make_groups(mort21, is_pop = 0, cat_19 = FALSE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, sheet = 4,
                    range = "C6:C6", col_names = FALSE)[[1]]
verify(mort21, sum(mort) == total)
mort21[, year := 2021]

scot21 <- merge(mort21, pop21, by="age_cat" )
```

### 2020

```{r}
#| message: false

file_year <- "./data/vital-events-20-ref-tabs-5.xlsx"
mort20 <- get_mort_year(file_year, group_5yr)
mort20 <- make_groups(mort20, is_pop = 0, cat_19 = FALSE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, sheet = 4,
                    range = "C6:C6", col_names = FALSE)[[1]]
verify(mort20, sum(mort) == total)
mort20[, year := 2020]

scot20 <- merge(mort20, pop20, by="age_cat" )
```

### 2019

```{r}
#| message: false

file_year <- "./data/vital-events-19-ref-tabs-5.xlsx"
mort19 <- get_mort_year(file_year, group_5yr)
mort19 <- make_groups(mort19, is_pop = 0, cat_19 = FALSE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, sheet = 4,
                    range = "C6:C6", col_names = FALSE)[[1]]
verify(mort19, sum(mort) == total)
mort19[, year := 2019]

scot19 <- merge(mort19, pop19, by="age_cat" )
```

### 2018

```{r}
#| message: false

file_year <- "./data/vital-events-18-ref-tabs-5.xlsx"
mort18 <- get_mort_year(file_year, group_5yr)
mort18<- make_groups(mort18, is_pop = 0, cat_19 = FALSE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, sheet = 4,
                    range = "C6:C6", col_names = FALSE)[[1]]
verify(mort18, sum(mort) == total)
mort18[, year := 2018]

scot18 <- merge(mort18, pop18, by="age_cat" )
```

### 2017

```{r}
#| message: false

file_year <- "./data/vital-events-17-ref-tabs-5.xlsx"
mort17 <- get_mort_year(file_year, group_5yr)
mort17 <- make_groups(mort17, is_pop = 0, cat_19 = FALSE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, sheet = 4,
                    range = "C6:C6", col_names = FALSE)[[1]]
verify(mort17, sum(mort) == total)
mort17[, year := 2017]

scot17 <- merge(mort17, pop17, by="age_cat" )
```

### 2016

```{r}
#| message: false

source("./code/get-mort-5-2.R")

file_year <- "./data/vital-events-16-ref-tabs-5-2.xlsx"
mort16 <- get_mort_5_2(file_year, group_5yr, yr=16)
mort16 <- make_groups(mort16, is_pop = 0, cat_19 = FALSE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, range = "C6:C6", 
                    col_names = FALSE)[[1]]
verify(mort16, sum(mort) == total)
mort16[, year := 2016]

scot16 <- merge(mort16, pop16, by="age_cat" )
```

### 2015

```{r}
#| message: false

file_year <- "./data/vital-events-15-ref-tabs-5-2.xlsx"
mort15 <- get_mort_5_2(file_year, group_5yr, 15)
mort15 <- make_groups(mort15, is_pop = 0, cat_19 = TRUE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, range = "C6:C6", 
                    col_names = FALSE)[[1]]
verify(mort15, sum(mort) == total)
mort15[, year := 2015]

scot15 <- merge(mort15, pop15, by="age_cat" )
```

### 2014

```{r}
#| message: false

file_year <- "./data/vital-events-14-ref-tabs-5-2.xlsx"
mort14 <- get_mort_5_2(file_year, group_5yr, yr = 14)
mort14 <- make_groups(mort14, is_pop = 0, cat_19 = TRUE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, range = "C6:C6", 
                    col_names = FALSE)[[1]]
verify(mort14, sum(mort) == total)
mort14[, year := 2014]

scot14 <- merge(mort14, pop14, by="age_cat" )
```

### 2013

```{r}
#| message: false

file_year <- "./data/vital-events-13-ref-tabs-5-2.xls"
mort13 <- get_mort_5_2(file_year, group_5yr, yr = 13)
mort13 <- make_groups(mort13, is_pop = 0, cat_19 = TRUE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, range = "C6:C6", 
                    col_names = FALSE)[[1]]
verify(mort13, sum(mort) == total)
mort13[, year := 2013]

scot13 <- merge(mort13, pop13, by="age_cat" )
```

### 2012

```{r}
#| message: false

file_year <- "./data/vital-events-12-ref-tabs-5-2.xls"
mort12 <- get_mort_5_2(file_year, group_5yr, yr = 12)
mort12 <- make_groups(mort12, is_pop = 0, cat_19 = TRUE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, range = "C6:C6", 
                    col_names = FALSE)[[1]]
verify(mort12, sum(mort) == total)
mort12[, year := 2012]

scot12 <- merge(mort12, pop12, by="age_cat" )
```

### 2011

```{r}
#| message: false

file_year <- "./data/vital-events-11-ref-tabs-5-2.xls"
mort11 <- get_mort_5_2(file_year, group_5yr, yr = 11)
mort11 <- make_groups(mort11, is_pop = 0, cat_19 = TRUE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, range = "C5:C5", 
                    col_names = FALSE)[[1]]
verify(mort11, sum(mort) == total)
mort11[, year := 2011]

scot11 <- merge(mort11, pop11, by="age_cat" )
```

### 2010

```{r}
#| message: false

file_year <- "./data/vital-events-10-t5-2.xls"
mort10 <- get_mort_5_2(file_year, group_5yr, yr = 10)
mort10 <- make_groups(mort10, is_pop = 0, cat_19 = TRUE)

# Check that sum of age categories equals the recorded total
# in source data
total <- read_excel(file_year, range = "C5:C5", 
                    col_names = FALSE)[[1]]
verify(mort10, sum(mort) == total)
mort10[, year := 2010]

scot10 <- merge(mort10, pop10, by="age_cat" )
```

Combine mortality data tables, ordered by year

```{r}

# mort_all <- ls()[sapply(ls(), function(x) is.data.frame(get(x)))]
# 
scot_dt <- rbind(scot10, scot11, scot12, scot13, scot14, scot15,
                 scot16, scot17, scot18, scot19, scot20, scot21,
                 scot22)
saveRDS(scot_dt, file = "./data-clean/scot_dt.rds")
```

Save the combined data table that are in "tidy data" format

```{r}

# saveRDS(mort_dt, file = "./data-clean/scot-mort.rds")
# 
# # Cleanup the environment
# remove(list = mort_all)
rm(get_mort_year, get_mort_5_2, file_year)
```
